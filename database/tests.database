{"_id":1,"title":"Parcial I","problems":[{"statement":"Una piscina construida para una urbanización cerrada tiene las siguientes dimensiones largo **(L)**, ancho **(A)** y alto **(T)**. El largo es ingresado en *milímetros*, el ancho en *centímetros* y la Altura en *metros*. \nSe desea saber:  \n\n 1. ¿Cuál es el volumen de la piscina en metros cúbicos?\n 2. Sabiendo que el metro cúbico de agua es a **(X)** Bs. ¿Cuánto cuesta llenarla de agua?\n 3. También sabiendo que en cada lluvia mensual caen **(Y)** metros cúbicos, ¿Cuántos meses se necesitaría para llenarla mediante agua lluvia?\n\nDiseñe un algoritmo, para que responda a las anteriores interrogantes, luego de que el usuario ingrese los valores de: **L**, **A**, **T**, **X** y **Y**. \n\n#### Fórmulas y Equivalencias\n\n- **Volumen = Ancho  x  Largo  x  Alto**\n- 1 m = 1000mm\n- 1 m = 100cm","code":"/* Code Test I - Problem 1 */\n#include <stdio.h> \n\nint main()\n{ \n    /* Hacer: \n        - Imprimir en pantalla: ¡Hola SU_NOMBRE! Bienvenid@ a AprendaC */ \n    return 0;\n}","expectedOutput":"> Expected ouput Test I - Problem 1 \n> ¡Hola SU_NOMBRE! Bienvenid@ a AprendaC"},{"statement":"Un centro clínico de la ciudad dispone de una caldera para producir, entre otras cosas, aire comprimido que es almacenado en un recipiente. \nEl recipiente recibe constantemente **presión** de la caldera, pero éste tiene una **capacidad máxima** y por lo tanto requiere de un control continuo, cuya *situación* es considerada de acuerdo a la siguiente escala:\n\nPresión Promedio | Situación \n---------- | ---------- \nEntre 0 y 180 | *BAJA*\nEntre 181 y 350 | *MODERADA*\nEntre 351 y 590 | *ACEPTABLE*\nEntre 591 y 750 | *RIESGO*\n\nDurante un periodo de trabajo de la caldera, un operador toma **dos lecturas** de la presión, cada cierto tiempo, es decir varias veces. Considerando que el control no sea necesario siempre, por estar la caldera en mantenimiento, diseñe un programa para:\n\n 1. Calcular, cada vez que el operador tome las dos lecturas, la presión promedio, y de acuerdo a la escala anterior **emitir la situación correspondiente** del recipiente.\n 2. Calcular el **porcentaje de veces**, que la situación se mantuvo en situación **Moderada**.\n 3. Considerando que las lecturas se toman en orden y que se debe llevar una numeración de las mismas; determinar: ¿En **qué número de las lecturas** se registró la **mayor presión promedio, solo dentro de la situación de Riesgo**? \n  - **Nota:** Si sucedió en varias ocasiones considere la última vez que ocurrió. Si nunca ocurrió la situación de riesgo, indicarlo.","code":"/* Code Test I - Problem 2 */\n/* Hacer: \n        - Incluir la librería stdio.h */ \n\nint main()\n{ \n    printf(\"¡Librería incluida con éxito!\"); \n    return 0;\n}","expectedOutput":"> Expected ouput Test I - Problem 2 \n> ¡Librería incluida con éxito!"},{"statement":"Desarrolle un algoritmo que simule la administración del disco duro de un computador. Para ello **se conoce inicialmente la capacidad total y la capacidad disponible** de dicho recurso, las cuales son medidas en **Mb** (*Megabytes*). \n\nEs sabido que hay dos tipos de operaciones a realizar con un archivo: **almacenamiento ó eliminación** y asumiendo que siempre se hacen varias operaciones en este computador y que por cada operación se tienen los siguientes datos: **Tipo de archivo**, **operación** (1: Eliminación y 2: Almacenamiento), **tamaño del archivo** (en KB ). Por ejemplo:\n\nTipo | Operación | Tamaño\n---------- | ---------- | ---------- \nDocumento Word | 2 | 35\nLibro Excel | 1 | 22\nArchivo C | 2 | 0.80\n... | ... | ...\n\nEl algoritmo debe permitir lo siguiente: \n\n 1. A través de un menú, realizar las operaciones de almacenamiento y eliminación que requiera el usuario, es decir, el programa se detendrá cuando el usuario lo indique.\n 2. **Indicar si cada operación se pudo realizar satisfactoriamente** e **indicar la capacidad disponible en KB después de efectuada tal operación**. Tome en cuenta que haya espacio suficiente para almacenar un archivo o si el disco este libre completamente y no haya archivo alguno por eliminar. \n 2. Indicar **cuál tipo de operación** fue más solicitada y efectuada satisfactoriamente, si la de eliminación o la de almacenamiento. \n 3. Finalizado el proceso, muestre el **espacio ocupado en bytes** y el **porcentaje de espacio libre** del disco duro del computador.\n \n#### Equivalencias \n\n- 1Mb = 1024 Kb \n- 1Kb = 1024 bytes","code":"/* Code Test I - Problem 3 */\n/* Hacer: \n        - Incluir la librería stdio.h */ \n\nint main()\n{ \n    printf(\"¡Librería incluida con éxito!\"); \n    return 0;\n}","expectedOutput":"> Expected ouput Test I - Problem 3 \n> ¡Librería incluida con éxito!"}]}
{"_id":2,"title":"Parcial II","problems":[{"statement":"Una Institución de Educación Superior tiene sus 68 aulas de clase, distribuidas en tres edificios, identificados con las letras A, B y C. En cada edificio hay un número diferentes de aulas, identificadas con un número, cada una con una capacidad distinta, medida en puestos, y con un área diferente, medida en metros cuadrados. Esa información debe ser almacenada en arreglos unidimensionales (Vectores) paralelos, de tal forma que se puedan trabajar como se muestra, por ejemplo, en el esquema siguiente:\n\n![Organización de las aulas de un edificio](assets/img/test2-exercise1.svg \"Organización de las aulas de un edificio\")\n\nComplete el siguiente programa en lenguaje C, para: \n\n 1. Calcular la **capacidad total**, en puestos, **de cada edificio**.\n 2. Crear un **nuevo vector** con la relación (**metros cuadrados / alumno**), para **cada** una de las **aulas**. \n 3. Identificar, mediante el número y el edificio, **el aula o las aulas**, de **mayor capacidad de puestos**.\n 4. Permitir la consulta de la capacidad de un aula, cuyo edificio y número de aula sean datos suministrados por el usuario. Primero se debe solicitar la identificación del edificio y validar el dato de entrada, para luego verificar la existencia o no del aula.","code":"/* Code Test II - Problem 1 */\n#include <stdio.h> \n\nint main()\n{ \n    /* Hacer: \n        - Imprimir en pantalla: ¡Hola SU_NOMBRE! Bienvenid@ a AprendaC */ \n    return 0;\n}","expectedOutput":"> Expected ouput Test II - Problem 1 \n> ¡Hola SU_NOMBRE! Bienvenid@ a AprendaC"},{"statement":"En el comedor estudiantil de la Universidad Nacional Experimental del Táchira, se lleva un control manual sobre el consumo, en kilogramos, de seis (6) hortalizas, en cada uno de los cinco (5) días hábiles de una semana, así como se ejemplifica a continuación:\n\n![Organización de las hortalizas del comedor](assets/img/test2-exercise2.svg \"Organización de las hortalizas del comedor\")\n\nEn base a los datos disponibles, se necesita que usted elabore un programa en lenguaje C, que utilice arreglos: unidimensional (Vector) y bidimensional (Matriz), para que luego de dar entrada a los datos suministrados por el usuario y procesarlos responda a lo siguiente:\n\n 1. **Almacenar** los datos (los kilogramos consumidos) en el **arreglo correspondiente**. \n 2. Si la administración compra **cada kilogramo** de hortaliza a un **precio fijo**, igual para todas ellas, cuyo valor lo conoce el usuario; Calcular el **total en bolívares** gastado en este tipo de alimento (hortalizas), en los cinco días hábiles de la semana. \n 3. Mostrar el **consumo de una de las hortalizas**, para un día cualquiera de la semana, de interés para el usuario. \n 4. Calcular y mostrar, **en porcentaje**, el **consumo** de hortalizas para **cada uno de los días** hábiles de la semana. Se sugiere crear un vector con el total consumido en cada uno de lo cinco días.","code":"/* Code Test II - Problem 2 */\n/* Hacer: \n        - Incluir la librería stdio.h */ \n\nint main()\n{ \n    printf(\"¡Librería incluida con éxito!\"); \n    return 0;\n}","expectedOutput":"> Expected ouput Test II - Problem 2 \n> ¡Librería incluida con éxito!"},{"statement":"Actualmente el Estado Táchira está experimentando un crecimiento constante en la generación de desechos sólidos. Se tienen las estadísticas de recolección, en toneladas, para el primer semestre del año pasado de 7 municipios y se organizaron como se muestra en el siguiente esquema:\n\n![Organización de los desechos sólidos](assets/img/test2-exercise3.svg \"Organización de los desechos sólidos\")\n\nSe requiere que realice un programa en Lenguaje C para: \n\n 1. Completar la asignación de los datos en los arreglos correspondientes de acuerdo al esquema planteado. \n 2. Calcular el **total de toneladas** que se recolectaron en los **primeros 3 meses** del semestre, en los **primeros 4 municipios** registrados. \n 3. Se desea saber la cantidad de desechos recolectados en cada mes, para ello debe almacenar en un vector tales cantidades y mostrar organizadamente los datos.\n 4. Determine en que meses del semestre, un determinado municipio genero la mayor cantidad de desechos. Además indique en cuantos meses ocurrió tal hecho. El municipio será el indicado por el usuario. Si el municipio solicitado no fue registrado en las estadísticas, se le debe informar al usuario.","code":"/* Code Test II - Problem 3 */\n/* Hacer: \n        - Incluir la librería stdio.h */ \n\nint main()\n{ \n    printf(\"¡Librería incluida con éxito!\"); \n    return 0;\n}","expectedOutput":"> Expected ouput Test II - Problem 3 \n> ¡Librería incluida con éxito!"}]}
{"_id":3,"title":"Parcial III","problems":[{"statement":"Escriba un programa en C, que satisfaga los siguientes requerimientos:\n\n 1. Calcular la superficie y el volumen de una esfera, mediante una **función que use solo paso de parámetros por referencia**. De la esfera, el usuario ingresará su diámetro.\n 2. Indicar a que cuadrante pertenece un punto del que se conocen las coordenadas ( **x , y** ). Para ello debe usar una **función con parámetros, de tipo `int`**; pero debe mostrar el cuadrante de la forma ( *I, II, III o IV* ), de acuerdo al sistema de coordenadas cartesianas. Para mostrar la salida requerida se sugiere usar la función `switch`. Se debe validar que el punto no esté ubicado sobre los ejes **x** y **y**.\n 3. Conocidas las coordenadas de dos puntos por donde pasa una recta. Calcular y mostrar la **pendiente de la recta**. Debe **validar** que las abscisas de ambos puntos sean diferentes.\n\n\n#### Fórmulas\n\n- **Volumen = (4/3)  x  π  x  r^3**\n- **Superficie = 4  x  π  x  r^2** \n- **Pendiente = (y2 - y2) / (x2 - x1)**\n\n#### Coordenadas Cartesianas\n\n![Coordenadas Cartesianas](assets/img/test3-exercise1.svg \"Coordenadas Cartesianas\")","code":"/* Code Test III - Problem 1 */\n#include <stdio.h> \n\nint main()\n{ \n    /* Hacer: \n        - Imprimir en pantalla: ¡Hola SU_NOMBRE! Bienvenid@ a AprendaC */ \n    return 0;\n}","expectedOutput":"> Expected ouput Test III - Problem 1 \n> ¡Hola SU_NOMBRE! Bienvenid@ a AprendaC"},{"statement":"Se desea registrar la información sobre los miembros del coro de la Universidad Nacional Experimental del Táchira. La información que se tiene de cada uno es:\n\n- **Datos personales:** (nombres, edad, índice académico) \n- **Voz:** soprano, mezzo-soprano, contralto, barítono, tenor ó bajo \n- **Extensión de la voz:** alta o baja\n\nSe desea que Usted codifique un programa en lenguaje C para: \n\n 1. Almacenar en un arreglo (vector) de estructuras la información de cada integrante del coro. Este proceso debe hacerse usando una función con parámetros en donde se use la instrucción `return`.\n 2. Mostrar la cantidad de integrantes con extensión alta de voz, sopranos o barítonos, que sean menores de 20 años. Utilice una función con parámetros.\n 3. Calcular la cantidad de integrantes del coro que son tenores y la cantidad de integrantes que poseen la extensión de la voz baja. Utilice una única función con parámetros. Los resultados deben imprimirse en la función principal.\n 4. Calcular y mostrar el porcentaje de mujeres que conforman el coro si se sabe que las mujeres son clasificadas como soprano, mezzo-soprano o contralto.","code":"/* Code Test III - Problem 2 */\n/* Hacer: \n        - Incluir la librería stdio.h */ \n\nint main()\n{ \n    printf(\"¡Librería incluida con éxito!\"); \n    return 0;\n}","expectedOutput":"> Expected ouput Test III - Problem 2 \n> ¡Librería incluida con éxito!"},{"statement":"Una Academia de Paracaidismo, está llamando al proceso de inscripciones para el próximo curso, con un máximo de 36 cupos. A objeto de automatizar el proceso y generar algunas respuestas, se le pide a Usted que codifique un programa en Lenguaje C, de manera que a cada aspirante se le registren los siguientes datos: Ejemplo\n\n- **Apellidos y Nombres:** Tovar Pulido María Irene\n- **Características:** \n  - *Sexo:* femenino \n  - *Edad:* 22\n  - *Clave:* XCP-028\n- **Peso:** 46.5\n- **Experiencia:** 1: Si --- 2: No\n\nLa academia requiere que el programa permita: \n\n 1. Almacenar los datos, de cada aspirante que solicite inscripción en la Academia, en un arreglo de estructuras.\n 2. Calcular del total de mujeres el porcentaje de las que tienen experiencia. \n 3. Calcular la edad promedio de los aspirantes sin experiencia y la cantidad de aspirantes cuyo peso excede al promedio general. Use una única función definida de tipo `void` que utilice punteros para manipular las variables pasadas por parámetros.","code":"/* Code Test III - Problem 3 */\n/* Hacer: \n        - Incluir la librería stdio.h */ \n\nint main()\n{ \n    printf(\"¡Librería incluida con éxito!\"); \n    return 0;\n}","expectedOutput":"> Expected ouput Test III - Problem 3 \n> ¡Librería incluida con éxito!"}]}
