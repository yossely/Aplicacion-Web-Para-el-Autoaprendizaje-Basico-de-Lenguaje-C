#This document is written in Hjson to be able to transform multiline strings easyly
[
    {
        "_id": 1,
        "title" : "Unidad I. Estructura básica de lenguaje C",
        "lessons": [
            {
                "_id": 1,
                "title": "Nuestro primer programa en C",
                "content": "Estructura básica de un programa en C, librerías en C, función principal main, sentencias, directiva #include y comentarios.",
                "explanation": '''
                               Vamos a hacer el típico programa para empezar a conocer nuestro lenguaje, este es el ejemplo del “¡Hola Mundo!”
                               ```c
                               #include <stdio.h> 

                               int main()
                               { 
                                   /*Comentario: Imprimir en pantalla ¡Hola Mundo!*/
                                   printf("¡Hola Mundo!"); 
                                   return 0;
                               }
                               ```
                               Estudiemos el significado de las instrucciones presentes en nuestro programa: 

                                - En la línea 1 estamos incluyendo información de la _librería_ en C de entrada y salida, esta librería nos proporciona funciones para imprimir en pantalla (salida) información y para solicitar (entrada) información del usuario.
                                - Luego, en la línea 3, tenemos nuestra **función principal** llamada `main`, todo el código que queremos que se ejecute debe ir dentro de esta función.
                                - Por ahora, nuestro main muestra el mensaje “¡Hola Mundo!” usando la función `printf`, esta función pertenece a la librería `stdio.h` que hemos incluido en la primera línea y con ella podemos imprimir en pantalla lo que necesitemos de manera sencilla. La función printf ahora solo imprime una cadena de caracteres, que están encerrados con los signos `" "`
                                - En lenguaje C es posible escribir comentarios que faciliten la comprensión y legibilidad de un programa, en la línea 5 se observa que un comentario se tiene la forma `/* Comentario ... */`
                                - La línea 7 de nuestro main indica que el programa retorna 0 al sistema operativo cuando termina la ejecución. 
                                - Observemos 3 características importantes aquí: la directiva `#include <stdio.h>` no termina en ningún caracter especial, nuestro `main` agrupa las dos instrucciones que queremos ejecutar con los signos `{ }` y cada una de las instrucciones termina en `;` 

                               ### ¡Vamos a poner esto en acción con el ejemplo!
                               ''',
                "example": {
                    "statement": "1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores esse quo dicta, neque deleniti fugiat deserunt aliquam! Hic omnis distinctio natus amet doloremque tempore officia laudantium pariatur, optio debitis sequi doloribus id, at earum atque repellendus voluptatem fuga, autem vel quas voluptatibus officiis quasi? Omnis placeat tempora tenetur quam eveniet, error totam minima, consequuntur accusantium labore ducimus soluta alias. Dicta quae voluptas ad tempore quas, placeat ratione aliquam repellat molestiae laboriosam sed iste qui. Vero rerum corrupti nihil cum quisquam?",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 1; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "1.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur dolore dolor reprehenderit itaque obcaecati eveniet! Quisquam tempora doloremque illo quidem, dolor mollitia reiciendis quam atque doloribus sint, laboriosam excepturi dolorem voluptate dolore sunt inventore sit modi aut magnam ea fugiat? Illum aspernatur soluta odit accusantium culpa dolore architecto, iste sapiente. Quidem earum esse dolor architecto rem sed illum amet, modi ullam dolore ipsa aliquid ut eum adipisci harum eveniet quo, id, veniam quia, facilis consequatur doloremque. Eius, rerum soluta excepturi quia, fugit voluptas nisi officia rem accusamus impedit consectetur dignissimos? Eligendi sapiente aperiam impedit laudantium deserunt cupiditate, ex delectus ipsa!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){
                                    printf("uno"); 
                                    return 1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "1.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Officiis assumenda saepe ratione illo molestiae magni ipsa quaerat, quia ipsam facere quibusdam nesciunt aliquam velit error, praesentium, placeat culpa ea! Non, illo deserunt iste reprehenderit dolor, quod dicta rem nobis eum totam incidunt ipsa quis quam nostrum voluptatum vel eveniet, similique eligendi debitis autem. Aperiam libero, molestiae dolores voluptas laboriosam enim eaque. Ullam enim itaque, delectus expedita sunt vitae iusto facere optio eum nostrum ratione recusandae asperiores esse harum corporis, magnam et atque error illum dolorem, dolores veniam tenetur odio labore ipsum! Neque ad amet quam optio sapiente aliquid facere ipsa?",
                        "code": '''
                                #include <stdio.h> 
                                int main(){
                                    printf("dos"); 
                                    return 2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "1.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quidem labore nobis, earum possimus repellendus deserunt temporibus optio ex vero necessitatibus. Aut unde quasi vitae distinctio quisquam dignissimos! Laboriosam molestias dolorem commodi quas necessitatibus voluptatem eos quam impedit, minus beatae blanditiis, atque delectus, recusandae nam. Eum rerum delectus repellat voluptas voluptatum at qui vel harum, molestias sed soluta provident earum praesentium obcaecati est exercitationem commodi reiciendis tempora deleniti saepe distinctio quibusdam voluptates culpa necessitatibus? Officiis at repudiandae, sequi est doloremque labore ratione! Adipisci laborum consequuntur qui magni vero aut cum? Earum est, recusandae sed repudiandae sapiente quod quia! Sunt, labore, rerum!",
                        "code": '''
                                int main(){
                                    printf("tres"); 
                                    return 3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            },
            {
                "_id": 2,
                "title": "Variables",
                "content": "Declaración de una variable, identificadores, asignación de valores en una variable, tipos de datos y operadores matemáticos básicos.",
                "explanation": '''
                               Para usar una variable en C, primero ésta debe ser **declarada**, es decir, debemos describir a la variable **ANTES** de usarla. Lenguaje C tiene varios tipos de datos, pero los más básicos son:

                               Tipo | Descripción
                               ------------ | -------------
                               int | Números enteros (ya sea positivo o negativo)
                               float | Números decimales (ya sea positivo o negativo)
                               char | Caracter (un solo caracter: a, b, c, etc...)

                               Para declarar una variable primero especificamos el tipo de data que guardaremos en ella y el nombre o **identificador**. Al escoger el identificador se debe tomar en cuenta que puede contener letras, números y guión bajo `_`, debe empezar con letra o guión bajo y C distingue entre mayúsculas y minúsculas:
                               ```c
                               int precio;
                               float descuento;
                               char caracter;
                               ```
                               A través de la **asignación** guardamos valores en las variables variables, la asignación de un valor se puede hacer después de haber declarado la variable o en la misma instrucción de declaración, de esta manera: 
                               ```c
                               int precio;
                               precio = 40;
                               ```
                               ```c
                               float descuento = 0.3f;
                               char = 'c';
                               ```
                               Al escribir valores decimales en lenguaje C debemos especificar el `.` decimal y la `f`, es decir, si queremos guardar el valor 30 en una variable de tipo decimal debe ser `float variable = 30.0f;`

                               Ahora podemos hacer operaciones con estos valores y guardar el resultado en otra variable, vamos a calcular cuál es el precio final después de haber aplicado el descuento y guardar el valor en una variable de tipo `float`, esto con los operadores matemáticos básicos, + (suma), - (resta), * (multiplicación), / (división) y %(resto de la división):
                               ```c
                               int precio;
                               float descuento, precio_final;
                               precio = 40;
                               descuento = 0.3f;
                               precio_final = precio - (precio*descuento);
                               ```
                               En lenguaje C los operadores matemáticos tienen **reglas de precedencia**, las cuales indican que la multiplicación y división se resuelven primero y la suma y la resta después. La expresión que calcula el precio final también puede expresarse sin `( )` que agrupen `precio*descuento`, el resultado sería el mismo, pero para expresiones como `12 * 3 / 4` tal vez sea necesario usar `( )` para que la expresión se resuelva según nuestros requerimientos.
                               ''',
                "example": {
                    "statement": "2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Libero iure voluptas facere aspernatur illo reiciendis, illum rem placeat? Ea est ipsa explicabo quis libero possimus, quam iste quibusdam eius, maxime at expedita iusto dolore? Ab, perspiciatis, sapiente! Fuga adipisci quos velit earum ipsam voluptates numquam perferendis eum odit alias nostrum neque cumque, nesciunt aut labore reprehenderit consectetur necessitatibus ratione tenetur facere quia tempore magnam, id architecto. Recusandae corporis ipsum fugiat repudiandae natus, quidem temporibus rem harum, voluptates labore facilis tempora?",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 2; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "2.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nobis id, repellendus corporis, sequi consectetur rerum tempore veniam cupiditate accusamus illum earum molestias ab sit. Cumque omnis ab minima nisi quos obcaecati amet molestiae perspiciatis est provident officia vitae, harum minus aliquam sapiente dolore iusto fuga deleniti exercitationem dicta doloremque soluta? Nulla alias harum quo, vero quas ipsum fugiat. Tenetur veritatis minus magni, ullam cumque esse soluta officiis nulla enim possimus aut cupiditate aliquid temporibus et natus, iure ea necessitatibus consequatur voluptas sed alias, molestiae. Alias nihil voluptate libero, animi in molestiae, asperiores suscipit voluptatibus et, amet ad dignissimos ullam dolorum.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 2.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "2.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nulla alias quae vitae quibusdam, nisi fuga eveniet esse unde provident sint, quidem itaque harum animi ullam magni. Inventore quisquam, vero officia ipsam odio obcaecati, quod laboriosam, perferendis quae earum voluptatum, repudiandae reprehenderit! Placeat id voluptas reprehenderit, accusamus rem ipsum commodi quae deleniti suscipit quam minima debitis omnis ea. Minima, corrupti consequatur magnam sequi expedita sed atque explicabo ullam labore libero optio dignissimos, maiores incidunt dolor. Sint fugit ipsam est, labore laudantium reiciendis, inventore vero repellendus incidunt totam, iure commodi itaque recusandae quidem amet exercitationem? Dignissimos deleniti nesciunt porro ex, minus laborum!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 2.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "2.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ullam tempora nisi, ab dolores placeat atque voluptates error, eaque odit, iusto nobis non ratione temporibus! Sint perspiciatis ex magnam! Temporibus earum excepturi nemo accusantium unde cumque cum, atque sit vitae corporis totam id similique quidem esse asperiores blanditiis illum officiis deserunt dignissimos repudiandae doloremque praesentium soluta eos nulla ducimus. Voluptatem quo nam ex voluptatibus eius esse ipsam molestias expedita, dolorum corporis debitis, saepe nihil nemo dolores voluptatum ad fugiat labore vitae recusandae eligendi cumque libero odio. Est sit, omnis ab voluptatem esse, tempora nesciunt iste ipsa cumque hic dolorum! Quaerat, magni!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 2.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            },
            {
                "_id": 3,
                "title": "Imprimir y leer información con printf  y scanf",
                "content": "Imprimir valores enteros y decimales en la consola con printf. Solicitar y guardar valores enteros y decimales en variables con scanf.",
                "explanation": '''
                               # Imprimir y leer información con printf  y scanf
                               Ya vimos cómo imprimir valores de tipo `float`, ahora, para imprimir un valor de tipo `int`, debemos reemplazar el `%f` por `%d` de la siguiente manera:
                               ```c
                               printf("mitad de 6 es %d\n", 6/2);
                               ```
                               En la función printf es posible escribir expresiones directamente y de ser necesario varias expresiones en la misma instrucción, por ejemplo:
                               ```c
                               int mitad = 2; 
                               printf("mitad de 6 es %d y 6/4 equivale a %.2f\n", 6/mitad, 6.0f/4.0f);
                               ```
                               Vamos a notar algo muy importante en este tipo de instrucciones, en la posición del `%d` se mostrará el valor de la expresión `6/mitad` ya que es la **primera** expresión que se encuentra, en la posición del `%.2f` se mostrará el valor de la expresión 6.0f/4.0f ya que es la **segunda** expresión. Esto implica que la cantidad de variables o expresiones debe ser igual a la cantidad de %d o %f que se tengan.
                               El `.2` en `%.2f` indica la cantidad de decimales que deseamos imprimir en pantalla del valor obtenido de la expresión `6.0f/4.0f`

                               Para permitir que el usuario ingrese información y usarla en nuestro programa usaremos la función `scanf` también perteneciente a la librería `stdio.h`, veamos:
                               ```c
                               scanf("%d",&variable_entera);
                               scanf("%f",&variable_decimal);
                               ```
                                - Al igual que especificamos qué tipo de dato vamos a imprimir en pantalla con printf, debemos especificar qué tipo de dato queremos guardar con la función scanf `%d` - *int* o `%f` - *float*
                                - Vemos un nuevo operador `&` en esta instrucción, con este operador obtenemos la dirección de la variable que precede, esto con el fin de indicar a la función `scanf` **dónde** debe guardar el valor que acaba de leer.
                               ''',
                "example": {
                    "statement": "3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusantium sint alias dolorem eveniet unde vel, perferendis, ut ea mollitia maiores cupiditate. Nostrum itaque soluta recusandae consequuntur veritatis a placeat, voluptate natus omnis cupiditate inventore incidunt eligendi, velit nulla error quas suscipit laborum! Adipisci ab aspernatur, officiis quo recusandae architecto temporibus cupiditate illo animi enim asperiores voluptatibus, quos, et doloremque consequatur. Debitis optio adipisci esse vitae possimus illo ipsam voluptatibus, dolor, mollitia beatae quidem praesentium architecto eaque, amet harum ex veritatis!",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 3; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "3.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores, illum aliquid minima vitae dicta, incidunt molestiae facilis mollitia itaque consequatur impedit nisi ut eligendi deserunt ipsum facere quo perferendis nobis aut cum voluptates repellat nulla, unde pariatur! Animi beatae eveniet ipsum asperiores, molestias expedita et mollitia provident numquam sint explicabo eaque commodi hic officia soluta, alias atque maiores sapiente sed. Cum nulla quos ea eaque, laborum excepturi. Debitis in, molestiae molestias, provident quis tempora, ut sed praesentium iste possimus nesciunt commodi assumenda ipsam exercitationem atque error enim obcaecati? Assumenda eius sequi blanditiis ullam consectetur perferendis doloremque reiciendis, harum quisquam expedita.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 3.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "3.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit vitae voluptates saepe ad. Ipsum voluptatibus consectetur architecto odit nulla minima vel expedita veniam sequi quasi, soluta in minus dolor tempora veritatis explicabo obcaecati aperiam ex debitis earum id. Atque rerum error minus incidunt, assumenda! Mollitia dignissimos ad, quia voluptates animi saepe a, aut quis, fugit omnis possimus quae aperiam, ratione? Nobis explicabo est nisi sequi repellat tempora enim nesciunt corporis assumenda, aut consequuntur minima animi vel ullam optio, laudantium fugit dicta pariatur alias perspiciatis cupiditate. Quis, sequi, accusantium! Eos facilis et sed incidunt! Natus nam impedit commodi officia enim. Dignissimos.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 3.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "3.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eum fugiat, reiciendis debitis, beatae culpa inventore laborum iste autem error amet harum. Deleniti sequi, saepe ex ea eos pariatur autem. Libero fuga perspiciatis temporibus fugit ea aliquid labore nostrum excepturi, ex pariatur odit facilis ipsam quas harum, in culpa reprehenderit amet dolore numquam mollitia quia minima! Est odit cum placeat veritatis maxime libero beatae aliquid, eos nemo, facilis et nobis recusandae ratione officiis voluptatem! Veritatis eos voluptate sint blanditiis placeat facilis saepe voluptatibus, in quisquam, excepturi ab perspiciatis nesciunt fuga officia sunt incidunt. Minima totam dolorum nesciunt ex, quia eos perspiciatis!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 3.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            }
        ]
    },
    {
        "_id": 2,
        "title" : "Unidad II. Toma de decisiones",
        "lessons": [
            {
                "_id": 1,
                "title": "Sentencia de selección: If",
                "content": "Estructura de la condición if. Evaluar condiciones con los operadores relacionales, de igualdad y lógicos. Reglas de precedencia de los operadores.",
                "explanation": '''
                               Se les llama sentencias de selección porque permiten seleccionar y ejecutar cierta porción de código dependiendo de alguna condición (evaluando una expresión). La primera sentencia que veremos se denomina `if` y su forma más simple es:
                               ```c
                               if (/* condicion */)
                               {
                                   /* Bloque de instrucciones a ejecutar 
                                       SI se cumple la condicion */
                               }
                               ```
                               Si la *condición* que se encuentra dentro del paréntesis se cumple, se ejecuta el bloque de *instrucciones* ubicado dentro de las `{ }`. Para formular condiciones, lenguaje C posee operadores de tres tipos:
                               
                                - Operadores Relacionales 
                               
                               Símbolo | Descripción
                               ------------ | -------------
                               `<` | Menor que
                               `\>` | Mayor que
                               `<=` | Menor o igual que
                               `\>=` | Mayor o igual que
                               
                               
                               - Operadores de Igualdad
                                
                               Símbolo | Descripción
                               ------------ | -------------
                               `==` | Igual que
                               `!=` | Diferente que
                               
                               
                                - Operadores Lógicos 
                               
                               Símbolo | Descripción
                               ------------ | -------------
                               `!` | Negación
                               `&&` | AND lógico
                               <code>&#124;&#124;</code> | OR lógico
                               
                               Al evaluar una expresión se produce como resultado un **0** (falso) o **1** (verdadero). Estos operadores también tienen *reglas de precedencia* las cuales indican que primero se resuelven los operadores relacionales, luego los de igualdad y por último los lógicos.
                               Por ejemplo, en la expresión `x < y && y == z` primero se evalúa si x es menor que y, luego si y es igual que z y por último se verifica que las dos condiciones anteriores tienen como resultado verdadero. Algunos programadores utilizan *paréntesis* para agrupar las condiciones y que sean más legibles: `(x < y) && (y == z)`
                               ''',
                "example": {
                    "statement": "4 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Placeat iusto nemo ab totam neque ut, laudantium earum cupiditate atque esse est dolorem reiciendis unde consectetur temporibus commodi, inventore? Magni quidem qui, libero deleniti suscipit sint, voluptatem nisi ea, veritatis commodi animi minima porro debitis velit totam nihil temporibus unde blanditiis laborum earum iure praesentium. Qui, iure fugiat vitae rerum magni sit culpa ipsa recusandae sapiente sint vel cumque, maiores nisi, officia adipisci omnis odit. Soluta ratione eveniet tempore eius rerum.",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 4; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "4.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sequi aut qui voluptates voluptatem commodi nihil ad ipsam sint. Alias perferendis modi illo, nisi ullam similique sequi mollitia autem, obcaecati ab, reprehenderit quidem esse ut laboriosam. Quod eveniet sint nam, libero dolor incidunt obcaecati nisi, possimus nemo adipisci sapiente quidem magni beatae nihil laborum ab sed officia consequatur asperiores vitae quo rem odio assumenda? Voluptates expedita voluptatibus, doloremque assumenda, quos iusto aliquid asperiores, incidunt officiis velit consectetur nobis mollitia excepturi reprehenderit dignissimos maiores necessitatibus exercitationem consequatur fugit quia nulla. Quisquam culpa explicabo quaerat dolor magni dolorum vitae eligendi vel maxime in?",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 4.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "4.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Temporibus soluta obcaecati magni eveniet, optio cupiditate quia necessitatibus veritatis sapiente culpa iure perspiciatis consectetur maxime dicta eius, voluptas beatae omnis qui. Accusamus eligendi debitis quos a! Non vitae cupiditate veritatis veniam eveniet sed quo impedit atque vero eos enim molestiae adipisci reiciendis, sint fugiat ex ipsam doloribus laudantium, deleniti sapiente dolore fuga mollitia dignissimos. Dignissimos ab in aspernatur ullam tempora quidem at modi, consectetur praesentium assumenda perspiciatis corrupti placeat minima quam reprehenderit architecto autem iste qui deleniti vel, veritatis, impedit corporis facilis? Quibusdam veniam sequi quidem, soluta nesciunt esse, maiores ratione!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 4.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "4.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Praesentium tenetur voluptatibus doloremque, expedita iste cupiditate, possimus voluptate quibusdam excepturi adipisci iure soluta animi. Dignissimos ipsa veritatis expedita officiis alias quaerat, voluptatem a saepe quidem repudiandae nesciunt voluptas maxime quisquam, molestias magnam praesentium ea minus, reprehenderit hic atque ducimus doloribus illum. Ducimus libero perferendis ullam deleniti dignissimos nisi debitis quasi sequi sint numquam magni obcaecati, aliquid labore esse enim omnis magnam aut nam soluta non ratione optio ea placeat delectus blanditiis! Omnis sunt vero distinctio eligendi ipsa corporis blanditiis earum inventore repellat reiciendis. Adipisci, exercitationem enim error, assumenda accusantium placeat architecto.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 4.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            },
            {
                "_id": 2,
                "title": "Cláusula else",
                "content": "Estructura y uso de la cláusula else",
                "explanation": '''
                               # Cláusula `else`
                               En algunas oportunidades es útil ejecutar ciertas instrucciones si *NO* se cumple una condición `if`, para estos casos existe la cláusula `else`:
                               ```c
                               if (/* condicion */)
                               {
                                   /* Bloque de instrucciones a ejecutar 
                                       SI se cumple la condicion */
                               }else{
                                   /* Bloque de instrucciones a ejecutar 
                                       si NO se cumple la condicion */
                               }
                               ```
                               La sentencia `else` siempre va ligada con una sentencia `if`, ya que es la **contraparte** de la sentencia `if`, es decir, las instrucciones dentro de la cláusula `else` se ejecutan cuando al evaluar la expresión de la sentencia `if`, resulta **0** (falso)
                               ''',
                "example": {
                    "statement": "5 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolore illum, repudiandae perspiciatis, maxime corrupti laborum minus harum unde deserunt quasi doloribus quidem veritatis delectus ea dolor! Nemo nam dolorem quibusdam repellat delectus saepe consectetur, porro unde nobis, quia ad earum asperiores iure expedita illum nihil? Delectus tempore mollitia aspernatur, sapiente hic dolor officiis soluta quisquam maiores tenetur illo laborum fugiat, officia quidem fuga voluptatem iste asperiores architecto eaque vero deleniti! Nostrum tempore eligendi facilis numquam obcaecati ad. Fuga, quia, eum?",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 5; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "5.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptatum minus adipisci quos quo est, natus quisquam consequatur nemo, asperiores unde ullam expedita! Nam totam neque sunt dolorum sequi facere suscipit id placeat minima nihil veritatis voluptates, quod numquam aliquam! Provident libero deleniti nostrum, ullam. Quod hic earum provident ipsam rerum quisquam, iusto nemo praesentium eius. Error at fugit veritatis architecto nemo saepe expedita, adipisci labore consectetur sequi cum id! Praesentium a sapiente nam deleniti suscipit sint minus eius, ipsam unde temporibus nemo, officia quod doloremque aut, tempora. Omnis dolor iusto temporibus dicta, consequatur odio, sunt impedit repellendus dolorem error. Laborum!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 5.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "5.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore dolorum officia dolorem obcaecati ducimus quibusdam et eos, mollitia illo ipsam eum distinctio cumque atque fugiat, quae tempora natus asperiores. Unde eveniet, a obcaecati quae fugiat molestias distinctio numquam animi, iste. Et voluptate, ea eveniet fuga mollitia enim magnam aliquid voluptas fugiat laudantium, nesciunt itaque ex obcaecati, inventore quos minima, commodi incidunt! Nobis dolore, laboriosam ipsam voluptatibus libero quas aliquam iure totam facere, quisquam possimus, dolorum distinctio dolor quis tempora sint ipsum a consectetur sapiente ea odit enim nulla. Architecto amet ducimus suscipit porro dolore neque officiis qui tempora modi est.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 5.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "5.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Reprehenderit, excepturi, amet! Non laboriosam est natus veniam ut cum at velit blanditiis, incidunt error dolores doloremque dolorum repudiandae. Repudiandae commodi labore est consequuntur harum natus impedit, consequatur autem vitae aspernatur numquam accusamus quibusdam. Rem consectetur veritatis, quaerat tempora quis dolor eligendi ullam quae unde quo ipsa obcaecati animi, explicabo adipisci vel molestiae! Non adipisci sint aperiam eligendi, minus, quis impedit perspiciatis facere soluta asperiores labore quas tempora aspernatur at nobis quasi pariatur quibusdam iure. Minima sapiente fugiat tempore vero facere, a aliquid amet architecto ea dolor. Possimus a dolorem nemo iure.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 5.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            },
            {
                "_id": 3,
                "title": "Sentencia de selección: switch",
                "content": "Estructura de la sentencia switch. Elementos que componen la sentencia: case, break y default. Algunas condiciones del switch.",
                "explanation": '''
                               A menudo necesitaremos comparar una expresión contra una serie de valores para ver con cuál coincide y con base en esa coincidencia ejecutar un bloque de instrucciones u otro. Para estas situaciones tenemos la sentencia `switch`
                               Veamos un ejemplo práctico: si queremos mostrar un indicador (Excelente, bueno, regular o malo) basados en el valor introducido por el usuario (4, 3, 2 o 1 respectivamente), la sentencia `switch` es:
                               ```c
                               switch(valor){
                                   case 4:
                                       printf("Excelente\n");
                                       break;
                                   case 3:
                                       printf("Bueno\n");
                                       break;
                                   case 2:
                                       printf("Regular\n");
                                       break;
                                   case 1:
                                       printf("Malo\n");
                                       break;
                                   default:
                                       printf("Valor fuera del rango\n");
                                       break;
                               }
                               ```
                               De aquí que:
                               
                                - La expresión a comparar en la sentencia `switch` puede ser **ÚNICAMENTE** de tipo `int`.
                                - Cada caso `case` evalúa si valor coincide con un valor constante, el cual puede ser una expresión pero no puede contener variables, es decir, puede ser `5` ó `5+10` pero **no** `5+n`
                                - Después de definir cada caso, vienen las instrucciones a ejecutar si coincide con el mismo, no se requiere `{ }` para agrupar estas instrucciones. Por lo general, la última instrucción de cada caso es `break;` que indica detener el proceso de evaluar si el valor dentro de `switch` coincide con los casos restantes y se continúa con la siguiente instrucción o sentencia que esté después del `switch`
                                - No está permitido definir el mismo caso dos veces.
                                - Si *valor* no coincide con ninguna de los casos listados, entonces las instrucciones dentro del caso `default` son ejecutadas.
                                - El orden para definir los casos no importa, esto implica por ejemplo que el caso *default* no necesariamente va al final.
                               ''',
                "example": {
                    "statement": "6 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsum inventore, asperiores obcaecati. Doloribus reiciendis, enim ea! Ex amet nulla perspiciatis, ipsum quas voluptas, at ea cum, mollitia deserunt molestias nesciunt, autem debitis nam commodi? Cumque mollitia excepturi fugit veniam at id atque cupiditate tempora reprehenderit quibusdam iure, aliquid neque aperiam pariatur perferendis iste quo debitis nisi dolore dignissimos autem facere repellendus magni. Obcaecati similique alias reiciendis dolores esse, possimus in, odit cumque, dicta id suscipit? Eligendi laboriosam accusantium, dicta cupiditate.",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 6; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "6.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nisi voluptate natus, itaque molestiae veniam numquam autem maxime quaerat laudantium mollitia quas, placeat officiis expedita quibusdam doloribus aperiam sed animi iste harum quam blanditiis. Molestias hic assumenda expedita optio repellendus aliquam consequatur asperiores dolorum ad quaerat. Blanditiis cumque quis doloremque labore tempore mollitia nesciunt earum alias impedit ab optio sunt veritatis tempora velit illum quas, minima molestias. Deserunt consequatur magnam optio! Magnam voluptatem dolores nihil totam tenetur in autem fugiat commodi, rerum iste quam voluptatum laudantium adipisci, sunt ratione, eligendi natus. Consequatur odio molestiae in sunt ea, dolores exercitationem rerum dignissimos!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 6.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "6.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Animi tempore dolore, corrupti perspiciatis facere laudantium provident, possimus incidunt sint quas. Corporis fuga eligendi blanditiis nobis amet explicabo deserunt eius beatae ab tenetur harum aliquam deleniti commodi quaerat, quam velit a est officia voluptatem ducimus, ipsam impedit. Corporis eaque voluptatem illum nemo nesciunt reiciendis, asperiores tempora necessitatibus dolore, quo sint molestias voluptas amet iusto quasi a hic officiis nihil praesentium ut consequuntur ipsam nisi aspernatur dolorum? Unde corporis sint assumenda incidunt dolores, eius, nesciunt alias reprehenderit recusandae facere voluptate fugiat excepturi voluptatem laudantium maiores voluptatum ex, quis consequuntur provident, non enim!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 6.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "6.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum officia minus quo, aliquam error quos iste? Porro illo error, nulla ullam quo aspernatur vero obcaecati voluptatibus! Harum reprehenderit nemo doloribus incidunt, in, quasi tempore corrupti, excepturi voluptate, consectetur sit. Sunt ex voluptates, illum laborum dolorum quae ipsa. Ipsam alias ex sunt. A earum quia, animi, facere cum odit amet voluptate voluptatibus, sequi quam molestias excepturi corrupti voluptas dolorum est perferendis quo dicta veritatis labore? A repellendus, minima assumenda laboriosam ab at, dolor perspiciatis nihil quos ullam quidem, consequuntur enim et odio nesciunt dignissimos rem magnam! Eum aspernatur molestias accusamus, dolores!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 6.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            }
        ]
    },
    {
        "_id": 3,
        "title" : "Unidad III. Ciclos: while, do-while y for",
        "lessons": [
            {
                "_id": 1,
                "title": "Ciclos: while",
                "content": "Definición de ciclos, estructura y uso del ciclo while. ",
                "explanation": '''
                               Un ciclo es una sentencia que se encarga de ejecutar repetidamente las instrucciones que se encuentran dentro del cuerpo del ciclo. En C, cada ciclo tiene una expresión de control. **ANTES** de cada ejecución del cuerpo del ciclo (a esto se le llama *iteración*), la expresión de control es evaluada y si el resultado es verdadero, el ciclo continúa su ejecución.
                               
                               El primer ciclo que veremos se denomina `while`, tiene la siguiente estructura:
                               ```c
                               while(/* expresion */){
                                   // Instrucciones
                               }
                               ```
                               La expresión dentro de los paréntesis `( )` de la sentencia `while` es la **expresión de control**, es aquella que se evalúa y si resulta verdadero se ejecutan las instrucciones que están dentro del cuerpo del ciclo (iteración). Si queremos hacer un ciclo que imprima los números del 1 al 10:
                               ```c
                               int numero = 1;
                               while(numero < 10){
                                   printf("%d\n", numero);
                                   numero = numero+1;
                               }
                               ```
                                - Declaramos la variable *numero* y la inicializamos en 1
                                - Se evalúa la condición *numero* < 10 ? → Verdadero (1)
                                - Se imprime el numero 1 y luego se incrementa el valor de *numero* a 2
                                - Se evalúa nuevamente la condición *numero* < 10 ? → Verdadero (1)
                                - Se imprime el numero 2 y luego se incrementa el valor de *numero* a 3
                                - Así sucesivamente hasta que *numero* es igual a 10 
                                - Se evalúa la condición *numero* < 10 ? → Falso (0)
                                - Se sale del ciclo, es decir, se detienen las iteraciones y se continúa con la siguiente instrucción que esté después del `while`
                               
                               > **Nota:** El cuerpo del ciclo puede que no sea ejecutado ni una vez, ya que la expresión de control es evaluada ANTES de cada iteración (incluída la primera)
                               ''',
                "example": {
                    "statement": "7 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugiat unde cumque, a libero obcaecati soluta tenetur nemo, quae nulla quam, modi minima aspernatur tempore molestias iusto neque perferendis velit ipsam recusandae adipisci? Tempora dolores quos, quae quasi laboriosam aut in quia molestiae et fuga hic? Maxime perferendis optio numquam explicabo nobis obcaecati, recusandae consectetur nemo doloribus voluptatem voluptatum porro velit ratione deleniti, commodi quasi, ipsum culpa excepturi nisi, beatae voluptatibus vel sapiente. Voluptas ut iusto odit officiis tempora, unde dignissimos!",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 7; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "7.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur vitae, id libero corporis quaerat. Soluta accusantium veritatis consectetur consequatur praesentium neque eaque eveniet aliquid, iure iste iusto. Minus totam impedit, mollitia nesciunt ab architecto labore temporibus iste. Impedit magnam non ipsum, quia nulla iure, soluta nemo repudiandae quo temporibus ad deserunt architecto ea eius, voluptate fugiat deleniti? Dignissimos cupiditate suscipit aut blanditiis facilis, sequi hic distinctio necessitatibus praesentium, odio, provident delectus magnam minus commodi repellat tempora cum! Voluptas beatae officia quos adipisci illum eveniet error ab quas nostrum enim aut quidem dolor, alias minus perferendis unde praesentium delectus iusto laboriosam!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 7.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "7.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Explicabo consequatur modi, excepturi ea error, maxime eos accusantium laudantium quae hic soluta, sequi adipisci dolor ad praesentium saepe perspiciatis. Nostrum alias perferendis sequi, necessitatibus cumque molestiae, blanditiis assumenda, veritatis placeat libero, molestias quam quidem? Molestias numquam nobis, sint quisquam voluptas porro itaque natus aliquam quasi, non inventore consectetur voluptate perferendis. Obcaecati, distinctio iure rerum non laboriosam quia ad nihil deleniti aperiam dicta, consectetur? Inventore et, rem repudiandae quis repellendus, minima consequatur eos temporibus sunt voluptatibus dolorem, accusamus at velit sit corporis ipsum! Reprehenderit officiis voluptatem sint, quis rem eaque sequi deleniti.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 7.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "7.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Similique quisquam nobis dolores omnis fuga quae perferendis molestias quod eius magni! Saepe totam voluptates unde sint, amet repellendus nemo, laudantium architecto mollitia quam aspernatur deleniti excepturi molestias rem optio consequuntur nesciunt ab. Culpa vero quisquam nulla ducimus nisi odio atque deleniti quam id distinctio earum voluptate velit consectetur nam consequuntur, amet vel aut neque necessitatibus odit laudantium error quas impedit quaerat? Reiciendis facere illo repellat mollitia, odit nihil, commodi, quisquam nam autem deleniti explicabo sequi laborum alias harum aspernatur quis. Quo ipsum delectus ex obcaecati mollitia possimus, sint quaerat. Voluptate, nisi?",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 7.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            },
            {
                "_id": 2,
                "title": "Ciclos: do-while",
                "content": "Estructura y uso del ciclo do-while. Diferencia entre el ciclo while y do-while.",
                "explanation": '''
                               El ciclo `do-while` es básicamente una sentencia `while` cuya expresión de control es evaluada **DESPUÉS** de cada ejecución del cuerpo del ciclo. La sentencia `do-while` tiene la forma:
                               ```c
                               do{
                                   // Instrucciones
                               }while(/* expresion */);
                               ```
                               Al encontrar un ciclo `do-while` lo que ocurre es: el cuerpo del ciclo es ejecutado primero, luego la expresión de control es evaluada, si el resultado es verdadero (1) el cuerpo del ciclo es ejecutado otra vez y así sucesivamente. El ciclo termina cuando el resultado de la expresión de control es falso (0).
                               La **diferencia** entre el *while* y el *do-while* es que el `do-while` **SIEMPRE SE EJECUTA AL MENOS UNA VEZ**, mientras que el `while` podría no ejecutarse ni una vez si al evaluar la expresión se obtiene como resultado falso (0). Con esta característica en mente podemos distinguir cuándo necesitamos un ciclo u otro.
                               Si queremos determinar la cantidad de dígitos que posee un número entero positivo podemos hacer lo siguiente:
                               ```c
                               int valor, digitos=0;
                               printf("Introduzca un numero entero positivo: \n");
                               scanf("%d",&valor);
                               
                               do{
                                   valor/=10;
                                   digitos=digitos+1;
                               }while(valor>0);
                               
                               printf("El numero tiene %d digito(s)\n", digitos);
                               ```
                               Si usamos un ciclo `while` en lugar del `do-while`, no estaremos tomando en cuenta el caso en que el numero ingresado sea 0, donde al evaluar la expresión resulta falso (0) **ANTES** de ejecutar el cuerpo de ciclo por lo que no incrementamos el valor de digitos y el resultado final será *“El numero tiene 0 digito(s)”* cuando en realidad tiene 1 dígito.
                               ```c
                               while(valor>0){
                                   valor/=10;
                                   digitos=digitos+1;
                               }
                               ```
                               ''',
                "example": {
                    "statement": "8 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Architecto eaque molestias, saepe. Necessitatibus dolorum dolorem vel incidunt fuga ad ea accusamus, quas est eligendi, commodi debitis, et consectetur illum! Adipisci quo explicabo maxime, provident delectus officia saepe corrupti enim eligendi accusamus possimus aperiam beatae reprehenderit iste cum repudiandae aliquid, id, quasi, quas aut. Error quidem, alias labore ea accusantium ipsam, consequatur aperiam ut doloribus laudantium? Reprehenderit autem fuga laborum consectetur explicabo odio nisi possimus cumque enim, corporis voluptatum illo magni.",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 8; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "8.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Corporis quod velit sequi, atque obcaecati numquam iusto. Vitae deleniti labore vero, architecto quam! Omnis velit rem, et doloribus aliquid, iusto. Placeat totam vitae soluta architecto reprehenderit quam doloribus minus sint eum ab aperiam dolorem illo eos, dignissimos cum, dolor deleniti ratione amet unde quas vero iste accusamus. Possimus doloremque, aspernatur laborum, facere eligendi sint quisquam assumenda, unde dolorem, accusantium nihil ex culpa optio quibusdam odit molestiae nostrum fugiat expedita numquam? Accusantium, quaerat obcaecati commodi aliquid temporibus dolor atque cumque, maxime placeat, hic quam nam aliquam delectus expedita, laborum sit ducimus ex?",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 8.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "8.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Et maiores nesciunt quidem libero repellat, consectetur necessitatibus reiciendis eos officia, laudantium tempora eveniet earum. Velit accusantium, magnam fugiat, tempora repellat neque dolorem? Quidem adipisci iusto voluptatibus porro rerum ab voluptatem cumque quo iure exercitationem laboriosam, at eos reiciendis sit quae sapiente, enim ut eius vitae. Hic aperiam sit consectetur libero, atque, debitis magni a distinctio laboriosam ea sapiente dolore itaque. Recusandae est nobis temporibus obcaecati similique cumque libero quae asperiores, dicta! Accusamus molestiae, fugit eveniet dignissimos vel enim nemo odit architecto, quisquam sequi tempore animi saepe porro a id similique possimus.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 8.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "8.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dignissimos sit perferendis cum nihil, obcaecati quisquam eos necessitatibus nostrum harum porro expedita eaque eum ipsam dolor sunt ad iste enim, incidunt temporibus voluptate! Molestiae porro excepturi saepe fuga libero, delectus quibusdam quae repellat non ipsam laboriosam sunt dolorem odio eius eaque aperiam itaque quas veritatis maxime nulla autem. Doloremque quo cumque deleniti, perspiciatis veniam inventore architecto enim, qui optio iure sint expedita accusamus sunt dolore dolorum quae non mollitia. Tenetur unde ex quo, sit obcaecati nostrum facere sed, eveniet magni cumque natus provident quisquam quod praesentium dicta labore, laboriosam necessitatibus ipsum.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 8.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            },
            {
                "_id": 3,
                "title": "Ciclos: for",
                "content": "Estructura del ciclo for. ¿Cuándo y cómo utilizarlo?",
                "explanation": '''
                               El último ciclo de lenguaje C se denomina `for` y su estructura es la siguiente:
                               ```c
                               for ( /*expresion1*/ ; /*expresion2*/ ; /*expresion3*/)
                               {
                                   /* Instrucciones */
                               }
                               ```
                                - La *expresion1* representa el paso de **inicialización**, el cual se ejecuta *una sola vez* **ANTES** de que el ciclo se empiece a ejecutar
                                - La *expresion2* es la **expresión de control**, es decir, se evalúa expresion2 y si resulta verdadero (1) se ejecuta la iteración, de lo contrario se detiene el ciclo
                                - La *expresion3* es la operación que se ejecuta al **FINAL** de cada iteración.
                               
                               El ciclo for se emplea cuando se tiene la certeza de la **cantidad de iteraciones** que se desea tener. Con esto en mente, vamos a crear un ciclo for para imprimir una cuenta regresiva desde 10 hasta 1:
                               ```c
                               int i;
                               for (i = 10; i > 0; i--)
                               {
                                   printf("%d\n",i);
                               }
                               ```
                               En la línea 5 declaramos la variable que vamos a usar en el ciclo, luego las expresiones del ciclo nos indican:
                               
                                - Inicializar la variable con un valor de 10 **ANTES** de empezar las iteraciones
                                - **Repetir** la instrucción printf("%d\n",i); **mientras** i sea mayor que 0  
                                - Al **finalizar** cada iteración decrementar el valor de i en 1 
                               ''',
                "example": {
                    "statement": "9 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci soluta aspernatur voluptatem rerum velit temporibus perspiciatis libero, nobis saepe! Sed perferendis voluptates quibusdam recusandae, quidem modi numquam unde iusto aperiam. Excepturi laudantium officiis, necessitatibus reiciendis incidunt fugiat veritatis voluptate! Perspiciatis, nesciunt, quis. Accusamus similique minus ut soluta. Quae, obcaecati esse nobis distinctio laudantium! Asperiores corrupti illum, quis, labore rerum facere aperiam aspernatur aut libero. Quae possimus sunt similique eius debitis adipisci eos architecto amet alias accusamus natus magni maiores, quibusdam!",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 9; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "9.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eum et, velit amet eveniet maxime? Aliquid, mollitia voluptatem iste officia, hic quia modi et sapiente, inventore deleniti, velit sint eligendi! Quaerat impedit illum enim tenetur assumenda quibusdam aspernatur, minima ullam nobis libero sed earum. Similique temporibus totam, sunt atque sequi asperiores blanditiis quibusdam eaque natus quod dicta eum, illo, non? Quis quos vel, quod doloribus. Nisi modi, vitae ipsam laudantium optio velit cupiditate voluptates labore dolorum perferendis quisquam expedita nesciunt minus aut enim assumenda explicabo itaque praesentium odit neque id, hic iste excepturi! Sint nihil corporis rem soluta, inventore possimus odit.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 9.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "9.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nemo, dolores eum natus dicta vitae temporibus tempora tempore porro eius repellendus sint laborum, reprehenderit iure, consequatur magnam minima qui aliquam assumenda commodi. Et corporis cupiditate quisquam quos quis a asperiores ipsam amet ipsa, dolor, enim at consequuntur architecto beatae suscipit hic accusantium sit? Laboriosam debitis, qui quibusdam officiis dignissimos reprehenderit mollitia reiciendis vitae harum. Maiores dicta provident quisquam eveniet veritatis nesciunt voluptatum dolores! Numquam dolores, inventore quis dicta, aliquam nisi obcaecati! Voluptatibus a voluptates temporibus ut deleniti fugiat odio repudiandae in nesciunt nostrum tempora qui odit, aut consectetur, doloribus aliquam exercitationem.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 9.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "9.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eveniet alias quidem eum, commodi ducimus dolore blanditiis laboriosam minima dicta id culpa hic iure atque corrupti dolor reprehenderit. Necessitatibus suscipit labore numquam quod culpa nulla nemo nobis accusamus ipsum esse quos ut aliquid excepturi, ea commodi doloremque voluptates dolor tenetur officiis voluptatibus veritatis saepe, sapiente dolore. Aliquam accusamus at voluptates dolorum in officia, illum hic dolores dolorem placeat sapiente repellat eum sunt nulla itaque quidem ex aliquid! Commodi quos id debitis, animi nemo consequuntur saepe minus. Iusto vel harum ipsam, quidem dolorem qui eius tempore inventore ratione minus, esse natus nisi.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 9.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            }
        ]
    },
    {
        "_id": 4,
        "title" : "Unidad VI. Contadores, acumuladores, vectores y strings",
        "lessons": [
            {
                "_id": 1,
                "title": "Contadores y Acumuladores",
                "content": "Aumentar o disminuir valores progresivamente dentro de los ciclos. Acumular valores y guardarlos en una variable. Operadores abreviados para incrementar, disminuir y acumular valores.",
                "explanation": '''
                               Muchas veces, en el cuerpo de los ciclos necesitemos aumentar o disminuir progresivamente algún valor (**contador**) o tal vez sumar valores en alguna variable y mostrar el total al final (**acumulador**), para estos casos existen operadores que nos ayudan a simplificar expresiones. Si tenemos:
                               ```c
                               int i=0;
                               ```
                                - `i++;`    → se usa el valor viejo (0) en la instrucción actual y al finalizar, el operador ++ incrementa en 1 el valor guardado en i:
                                 - `printf("%d\n", i++);` → imprime 0
                                - `++i;`     → se incrementa en 1 el valor guardado en i ANTES de ser usado en la instrucción actual:
                                 - `printf("%d\n", ++i);` → imprime 1
                                - `i--;`    → se usa el valor viejo (0) en la instrucción actual y al finalizar, el operador -- decrementa en 1 el valor guardado en i
                                - `--i;`     → se decrementa en 1 el valor guardado en i ANTES de ser usado en la instrucción actual
                                - `i+=6;`     → el operador += equivale a tomar el valor que hay en i, sumarle 6 y guardar el resultado nuevamente en i. Con esto podemos crear acumuladores de la forma: `acumulador += nuevoValor;` donde se toma el valor que hay en *acumulador*, se suma el *nuevoValor* y se guarda el resultado nuevamente en la variable *acumulador*.
                                - El operador `+=` se aplica de la misma manera con los demás operadores matemáticos `-=`, `*=`, `/=`, `%=`
                               ''',
                "example": {
                    "statement": "10 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Molestiae dolorum temporibus et ipsum maiores delectus ratione quidem, magnam rerum voluptatem illo. Soluta eius veritatis magnam maiores, distinctio quae deserunt natus, pariatur suscipit temporibus doloribus ut blanditiis corporis! Nulla dolorum, assumenda non et consectetur illum cumque dolorem iste enim ipsam aliquid sequi adipisci labore minus consequatur deleniti obcaecati aliquam rerum exercitationem vitae, necessitatibus rem nemo laudantium quam. Eligendi quisquam, ea a velit molestias, soluta quidem et, aliquid ad voluptatibus maiores debitis!",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 10; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "10.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nemo ullam accusamus explicabo quibusdam doloremque necessitatibus modi, architecto odio sunt optio esse, itaque, vero incidunt dolor, veritatis eius perferendis voluptates porro ipsa consequuntur fugit debitis. Ducimus officiis ex, facere numquam delectus magnam hic, asperiores dicta maxime id quo exercitationem quae totam eos iste, ipsa error quis dignissimos necessitatibus accusamus ut! Ab sint natus ex ipsum dolores assumenda, libero eius! Repellendus molestias ab sint minima illum officiis harum non nobis repellat eos reprehenderit consectetur, blanditiis perferendis sequi nostrum ut officia voluptates. Mollitia id sit praesentium, maxime atque adipisci hic, maiores possimus dicta.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 10.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "10.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Et necessitatibus hic aspernatur rerum unde quo ipsum, deleniti numquam modi porro. Odio obcaecati reprehenderit ex repellendus nemo voluptas distinctio sapiente nam harum corporis nostrum rerum molestias delectus, recusandae et debitis, veniam aspernatur consectetur. Corrupti porro praesentium, dolore eum laudantium eligendi tempora odio, hic officia vel vitae? Error voluptatem obcaecati et, nostrum, magnam deserunt consequuntur cumque suscipit vero quisquam velit numquam recusandae at beatae voluptate voluptas sint, quas dolore eius ea ut asperiores voluptates minima. Et atque odit culpa, earum provident reiciendis, labore cumque harum dolore voluptatem dignissimos, voluptates corporis aliquam suscipit.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 10.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "10.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos saepe ipsa a adipisci ab itaque rem aspernatur laudantium. Sed necessitatibus voluptates voluptas voluptatibus quos repudiandae temporibus assumenda iste laborum ab, culpa odit veniam natus tenetur eum consequatur quaerat tempore deleniti. Mollitia totam accusamus cumque voluptas reiciendis in architecto eveniet blanditiis optio, porro nihil numquam, provident vero rem assumenda nostrum aut minima. Nam, distinctio, eveniet. Suscipit sit odio dignissimos quidem accusantium ratione incidunt deleniti. Commodi nesciunt, ipsam eveniet recusandae! At totam corporis itaque quidem ad iure necessitatibus consequuntur ipsam dolorum mollitia esse beatae officia nisi, quod quas facere sint officiis reiciendis!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 10.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            },
            {
                "_id": 2,
                "title": "Arreglos: vectores",
                "content": "Definición de arreglos. Declaración de un vector. Condiciones en los arreglos. Acceso a los elementos de un vector. Asignación de valores en un vector.",
                "explanation": '''
                               Un arreglo es una estructura que contiene un número X de valores, siendo todos los valores del mismo tipo, estos valores son conocidos como elementos. La forma más simple de un arreglo tiene solo una dimensión, se denomina arreglo unidimensional o vector.
                               Para declarar un vector debemos especificar el tipo de dato de los elementos que vamos a guardar y la cantidad de elementos, por ejemplo:
                               ```c
                               int vector[10];
                               ```
                               ####  Imagen
                               De aquí podemos observar:
                               
                                - Para acceder a un elemento en particular, escribimos el nombre de nuestro vector e indicamos el **índice** al que necesitamos acceder
                                - Los índices para acceder a cada elemento *siempre empiezan* por **0**, en este vector de 10 elementos, el primer elemento se accede con el índice 0, el segundo con el índice 1, … y el elemento 10 se accede con el índice 9
                               En general si un vector es declarado de tipo `int` entonces cada elemento será tratado como si fuera una variable de tipo `int`, por lo tanto, podemos ejecutar las mismas operaciones que ya hemos aplicado a las variables tipo `int`:
                               ```c
                               int vector[10];
                               
                               /*Asigna el valor en la quinta 
                                   posicion (indice 4) de vector */
                               vector[4] = 0; 
                               
                               /*Guarda un valor entero en la tercera 
                                   posicion (indice 2) de vector */
                               scanf("%d",&vector[2]);
                               
                               for (i = 0; i < 10; i++)
                               {
                                   /*Imprime en pantalla todos los elementos
                                       de vector usando la variable i como
                                       indice */
                                   printf("%d\n",vector[i]);
                               }
                               ```
                               ''',
                "example": {
                    "statement": "11 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Molestiae magni, facere dolores iusto dolore aspernatur quisquam! Ratione rerum architecto totam ab in, assumenda sint similique qui inventore aperiam fugit adipisci enim obcaecati blanditiis maxime ullam, et consequatur nam maiores quia ad aspernatur error nulla? Vero sit nostrum quidem officiis aliquam, praesentium, iusto ullam obcaecati placeat rem saepe illo temporibus libero in dicta fuga, labore reiciendis voluptates doloremque iure sunt fugit ducimus itaque dolorum. Voluptates aliquam, ratione corporis eaque sed. Tempore!",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 11; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "11.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Recusandae explicabo esse, voluptates! Nulla fugiat beatae, facere sed dolor ut deleniti qui at rem nisi repellendus maxime architecto est minus explicabo quisquam aperiam possimus eos. Quae obcaecati laboriosam ex error possimus a! Omnis fugiat quibusdam tempore neque doloribus ut eligendi repellendus, soluta corporis dolores consectetur beatae, repellat excepturi, accusantium molestiae sequi quo accusamus molestias modi cupiditate animi ipsam. Numquam ex tempora excepturi nostrum ad doloribus architecto adipisci veniam ipsam fugiat harum, labore, saepe officiis. Doloremque alias, numquam quaerat deserunt nesciunt, itaque nemo, cupiditate incidunt nulla harum iure! Voluptatum aliquid repudiandae, vero.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 11.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "11.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dignissimos quae dolores quia est, aspernatur vel, debitis magni, aliquam delectus doloremque animi quis facilis magnam reprehenderit nihil ad. Voluptates corporis quaerat officia temporibus, illo quae, libero provident neque esse similique, fugiat nihil adipisci molestiae aliquid ex fugit aspernatur architecto. Vero obcaecati eius unde, quis praesentium cum officia quaerat itaque, voluptate fugiat, molestias, minima quo. Ducimus minima accusamus veniam non est harum explicabo vero, numquam porro distinctio illum nesciunt iusto esse quia, animi quam. Temporibus dolorum laborum perferendis quasi quisquam quod porro, magni aperiam nesciunt animi aut dicta commodi quo, debitis tempore.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 11.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "11.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Error, fuga placeat accusantium enim recusandae reiciendis quibusdam nobis cupiditate eum praesentium! Sit consequuntur reiciendis amet quaerat nihil maxime soluta, impedit, quia dolor esse deserunt veritatis ratione in nobis. Ea eaque optio ipsa voluptas velit laudantium! Consectetur dolor illo itaque praesentium officia error. Quasi rerum exercitationem nulla quisquam hic corrupti dolore, reiciendis sit enim laborum similique molestiae necessitatibus magni, perferendis numquam aliquid. Perspiciatis modi doloremque nisi magni perferendis nobis, dolorem, quo, non obcaecati eius minima ipsum ad blanditiis omnis veritatis reiciendis adipisci inventore? Numquam illum, maxime, perferendis voluptatibus exercitationem magni sit maiores!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 11.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            },
            {
                "_id": 3,
                "title": "Strings",
                "content": "Declaración de strings. Asignación de valores en un string. Imprimir en la consola strings con printf y puts. Leer y guardar valores en un string con scanf y gets.",
                "explanation": '''
                               Para crear y utilizar una cadena de caracteres (*string*) en lenguaje C, usamos dos características que ya vimos: tipo de dato `char` (caracter) y un vector (arreglo unidimensional). Digamos que necesitamos un variable capaz de almacenar un máximo(puede ser menos) de 10 caracteres:
                               ```c
                               char mes[11];
                               ```
                               Lenguaje C agrega caracteres null (representado por `\0`) para marcar el final de la cadena, es por esto que creamos la variable mes con un espacio adicional a los 10 que se requieren. 
                               Podemos inicializar nuestro *string* en la misma instrucción de declaración:
                               ```c
                               char mes[11]="Octubre";
                               ```
                               ####  Imagen
                               También es posible declarar un string sin precisar su tamaño, en este caso el compilador se encarga de calcularlo:
                               ```c
                               char mes[]="Septiembre";
                               ```
                               Para imprimir en pantalla un *string* con la función `prinft`, usamos `%s` para marcar dónde queremos que vaya el contenido de la variable:
                               ```c
                               printf("Mes: %s\n",mes);
                               ```
                               Para leer y guardar una cadena de caracteres en nuestra variable string, podemos usar la función `scanf`:
                               ```c
                               scanf("%s",mes);
                               ```
                               La función `scanf` omite los espacios en blanco, es decir, lee y guarda cada caracter hasta que encuentra un espacio en blanco (también se omiten los espacios en blanco que pueda haber antes de los caracteres)
                               
                               Existen otras dos funciones para imprimir y leer strings:
                               ```c
                               gets(mes);
                               puts(mes);
                               ```
                               Cuya principal diferencia es que `gets` no omite los espacios en blanco al leer una cadena de caracteres y `puts` solo imprime strings (cadena de caracteres) y siempre agrega el caracter de nueva linea `\n` al final de la impresión. 
                               
                               Como un string es un vector de caracteres, podemos acceder a cada caracter, es decir, a cada elemento a través de un índice de la siguiente manera:
                               ```c
                               char c = mes[3];
                               printf("Deletreo: \n");
                               for (int i = 0; i < 11; ++i)
                               {
                                   printf("- %c\n", mes[i]);
                               }
                               ```
                               ''',
                "example": {
                    "statement": "12 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repellat odit, ipsam aliquam tempora officiis adipisci dignissimos harum suscipit ut vero, maxime explicabo beatae laborum accusamus hic dicta inventore id voluptas. Sit veniam ex, doloribus sint sequi ullam. Impedit dignissimos molestias deserunt voluptatibus odit quaerat voluptatum laborum labore, magnam amet, quo nostrum, dolorum, iure. Alias est in distinctio unde tempore eaque magnam? In rem dicta perspiciatis reprehenderit praesentium voluptate explicabo, aliquam impedit cum vitae, quo, ex neque quasi, quaerat vero. Deleniti.",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 12; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "12.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Explicabo sit delectus repellat vero, libero, debitis eveniet minima molestias adipisci qui. Architecto veritatis maiores temporibus possimus at, ea neque cumque ullam laborum. Unde beatae hic laboriosam minima, aliquid corrupti deserunt nam aliquam eligendi fuga minus atque fugit, itaque impedit, magnam culpa in? Nisi minima dolorem, qui eos, obcaecati temporibus quasi mollitia soluta vel inventore in, ipsa aperiam quidem et odit rerum dolor eveniet tempore impedit! Dolore illum id obcaecati sunt soluta pariatur veritatis, maxime accusantium minima, itaque provident fuga, quisquam unde amet nesciunt ratione minus reprehenderit sapiente qui optio? Labore, qui!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 12.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "12.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Provident tempora modi, voluptas sint quas delectus repudiandae beatae ab quaerat atque quasi iusto autem? Consequatur, sapiente iure, ad dignissimos vitae id veritatis veniam sit accusamus assumenda voluptatem at porro obcaecati numquam nemo repudiandae quos enim ea dolores recusandae rerum totam soluta, architecto consequuntur. Fuga blanditiis, similique commodi laboriosam sequi voluptas odio, atque in aliquid iure minima ipsum enim labore recusandae assumenda aperiam nesciunt ea totam quo earum eaque repudiandae suscipit dolores ut. Architecto nostrum quasi, voluptates nulla, deleniti maxime ab consequatur cupiditate maiores impedit quia iusto a quae, eveniet perferendis vero.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 12.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "12.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta laudantium ex accusantium, libero iste, id assumenda incidunt reprehenderit consequatur repudiandae, molestiae. Dicta minima, eius nihil earum necessitatibus, ratione consequatur nemo aliquid delectus rem quibusdam vero inventore, natus harum maiores aliquam vel maxime, iure odio animi quisquam? Explicabo impedit maiores neque harum aliquam, natus blanditiis fugiat consequatur beatae dolorem quis, voluptates at labore, provident quae magni voluptate repellat sapiente nulla, porro? Ipsum beatae repellat suscipit, expedita repudiandae aspernatur praesentium temporibus molestiae repellendus! Accusantium quidem assumenda delectus nesciunt ut rem quis laborum et voluptates tenetur error natus molestiae commodi, aliquid sunt eius.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 12.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            }
        ]
    },
    {
        "_id": 5,
        "title" : "Unidad V. Funciones, matrices y operaciones con strings",
        "lessons": [
            {
                "_id": 1,
                "title": "Funciones",
                "content": "Definición y uso de una función. Estructura de una función en lenguaje C. Llamado de una función.",
                "explanation": '''
                               Una función es una serie de instrucciones agrupadas por los signos `{ }`, con un nombre y pueden o no, retornar un valor. Las funciones nos permiten dividir nuestro programa en piezas pequeñas más fácil de modificar y reutilizar bloques de código, es decir, escribimos la función una vez y la usamos las veces necesarias.

                               Si en nuestro programa debemos calcular en varias oportunidades el promedio de dos números, podemos escribir una función para calcular y retornar el promedio:
                               ```c
                               int promedio(int valor1, int valor2)
                               {    
                                   int promedio;
                                   promedio = (valor1+valor2)/2;
                                   return promedio;
                               }
                               ```
                                - Se define el tipo de dato que retorna la función, en este caso es `int`. Puede ser cualquier tipo de dato (`float`, `char`, etc) y en caso de no retornar ningún valor, será de tipo `void` (vacío).
                                - Se escoge el nombre de la función (*promedio*)
                                - Las funciones pueden recibir *parámetros o argumentos*, ubicados dentro de los `( )` y separados por coma `,`. Debemos especificar el tipo de datos de cada parámetro. En este caso los valores recibidos serán guardados en las variables *valor1* y *valor2* respectivamente, con ellas podemos realizar las operaciones que hemos aplicados a variables de tipo `int`.
                                - Se escriben las instrucciones que queremos que se ejecuten al llamar a esta función. En este caso se declara la variable *promedio* y se le asigna el valor resultante de la expresión `(valor1+valor2)/2`
                                - Se retorna el valor de la variable promedio, notemos que esta variable es del mismo tipo que especificamos al declarar la función, es decir, int.
                               
                               Para llamar la función escribimos el nombre de la función seguido de los parámetros que requiere la misma:
                               ```c
                               int x = 3, y = 5;
                               int resultado = promedio(3,5);
                               ```
                               Observemos que:
                               
                                - No es necesario que las variables enviadas por parámetro se llamen valor1 y valor2. 
                                - Como la función promedio retorna un valor de tipo entero, podemos asignar ese valor a una variable del mismo tipo, en este caso resultado.
                               ''',
                "example": {
                    "statement": "13 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid quas fugit modi consequuntur labore! Sunt incidunt quidem voluptatem cumque ad, tempore eveniet voluptate, amet. Dicta error vero soluta animi enim? Totam esse sapiente cupiditate adipisci qui dolor consequuntur quis, omnis eum exercitationem unde iure repellat doloribus et perferendis, libero architecto facere provident voluptate, aperiam, inventore facilis tempora. Beatae amet harum veniam non placeat voluptas ipsam autem dolorem impedit. Eligendi ea eum dolorem tempore, sapiente. Maiores assumenda quidem molestias a aspernatur.",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 13; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "13.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nihil corporis beatae libero molestiae incidunt ipsa quibusdam, quod et iste quos eligendi ab minima sunt. Quia eum expedita ea tempora sequi iure nobis sed, nulla exercitationem! Consequuntur eaque dolorem delectus cum minus, laudantium maxime temporibus explicabo eius consectetur ducimus quis fugiat numquam animi, debitis perferendis illo repudiandae asperiores autem culpa rem ipsa molestiae. Qui repellat veritatis, corporis tempore numquam eaque ipsa reprehenderit, odit, dicta veniam unde neque. Velit ut, quos. Quis minima perspiciatis eligendi animi repellendus libero officiis tempora provident hic, voluptates quos obcaecati inventore consequuntur minus in repellat quidem beatae!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 13.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "13.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Molestias hic aut, quisquam explicabo repellendus voluptates voluptas tempora ab dignissimos quis officiis ipsa dolorum consequuntur vel. Dignissimos tempore eveniet laborum quo consectetur fugiat animi, totam omnis sed possimus corrupti, velit delectus aspernatur provident libero reiciendis fuga. Eos reiciendis ratione, neque velit perspiciatis possimus fuga obcaecati. Cum eligendi aliquid dolorem adipisci mollitia, nulla laudantium hic reprehenderit tempora, nesciunt veniam animi ullam necessitatibus voluptatibus nisi optio modi accusantium est. Cupiditate temporibus, suscipit ut. Assumenda, enim? Natus magnam nisi quis officia consequuntur quod neque ullam explicabo veritatis dolorem. Vero praesentium ducimus nihil veritatis, nulla.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 13.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "13.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam, corrupti distinctio laudantium, aliquam ex sed, eos pariatur impedit eum ea deleniti! Vel cumque doloremque atque excepturi est hic similique a inventore et provident quidem animi obcaecati, vero deleniti, repellat nihil itaque! Nihil maiores at accusantium ab architecto, possimus officiis? Iste possimus nemo a, corporis nihil ut veritatis quae architecto fuga modi maxime recusandae. Nam, cupiditate molestiae odit eligendi rem sint quibusdam beatae non, nulla adipisci neque accusamus ipsa sapiente. Ea ipsa minus cumque obcaecati hic necessitatibus enim, praesentium consequatur atque blanditiis iure itaque commodi quae, esse autem ipsum in ex.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 13.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            },
            {
                "_id": 2,
                "title": "Arreglos: matrices",
                "content": "Declaración e inicialización de una matriz. Acceso a los elementos de una matriz. Recorrer cada elementos de una matriz utilizando el ciclo for.",
                "explanation": '''
                               Veamos cómo declarar un arreglo bidimensional o matriz::
                               ```c
                               float matriz[5][9];
                               ```
                                Aquí tenemos una matriz de tipo `float`, tiene 5 filas y 9 columnas. Recordemos que los índices de los arreglos comienzan por 0, por lo tanto nuestra matriz luce:
                               ####  Imagen
                               Para acceder a un elemento debemos especificar las coordenadas de la forma `matriz[fila][columna]`, es decir, si queremos acceder al elemento ubicado en la fila 3, columna 6, escribimos `matriz[3][6]`
                               
                               Consideremos por ejemplo, inicializar un arreglo para usar como una matriz identidad
                               ####  Imagen
                               Necesitamos visitar cada elemento, un par de ciclos `for` resulta perfecto, uno para recorrer cada fila y otro para recorrer cada columna:
                               ```c
                               for (fila = 0; fila < 10; ++fila)
                               {
                                   for (columna = 0; columna < 10; ++columna)
                                   {
                                       // Si estamos en la diagonal principal, asignar valor 1.0f
                                       if (fila == columna)
                                       {
                                           matriz[fila][columna]=1.0f;
                                       }else{
                                           matriz[fila][columna]=0.0f;
                                       }
                                   }
                               }
                               ```
                               Para inicializar una matriz especificamos los elementos de cada fila con la ayuda de `{ }` de la siguiente manera:
                               ```c
                               int matriz[4][6] = {{1,1,0,1,0,1},
                                                   {0,0,1,1,0,0},
                                                   {0,1,1,0}};
                               ```
                               Al no inicializar algún elemento, este tendrá como valor 0. En este ejemplo las últimas dos columnas de la 3º fila y la 4º fila completa tendrán 0.
                               
                               También podemos *omitir* los `{ }` y escribir todos los elementos separados solo por comas, una vez el compilador encuentre suficientes valores para llenar una fila, empieza con la siguiente:
                               ```c
                               int matriz[4][6] = {1,1,0,1,0,1,
                                                   0,0,1,1,0,0,
                                                   0,1,1,0};
                               ```
                               De la misma manera se completan los elementos faltantes con el valor 0.
                               ''',
                "example": {
                    "statement": "14 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quia quae quasi in beatae, ratione repellendus, unde suscipit dicta expedita accusantium culpa sint odio maxime aperiam dolor aut nostrum praesentium commodi, ad debitis! Animi distinctio, ut cupiditate officia! Reiciendis nobis recusandae incidunt debitis accusamus architecto, eius fuga eveniet neque ducimus totam error sunt itaque nostrum! Sequi reiciendis natus id ipsam, nesciunt, illum magni necessitatibus expedita sunt, voluptatibus error ut quidem. Provident ab at id, unde quaerat quia tempore perspiciatis, iusto aliquam.",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 14; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "14.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Et provident quaerat optio maiores veritatis dolor eligendi inventore, porro minus cum, error quo ut in, ea consequuntur corporis necessitatibus tempora alias tenetur quisquam ducimus pariatur. Nulla labore amet tempora impedit ducimus ab dolores rem blanditiis optio, iure quos odio error reiciendis temporibus accusamus nihil dicta placeat beatae fuga, possimus corporis itaque ipsa at harum. Minus adipisci aliquid suscipit. Quas, accusamus! Non eaque reiciendis excepturi eligendi laboriosam at ducimus, quam voluptate dolores sunt nesciunt. Cum labore sint distinctio nostrum quos natus fugiat, possimus ex deleniti iusto eligendi perferendis eaque, quasi, harum libero!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 14.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "14.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eaque, porro explicabo et. Culpa quam suscipit libero temporibus praesentium, labore officiis optio assumenda veniam! Consequatur, porro. Minus dolorem quasi eius, sint, deserunt necessitatibus nisi fugiat fugit ratione, culpa optio? Aperiam maiores optio beatae at illo, a, porro veniam architecto cupiditate autem esse incidunt reprehenderit in nostrum consectetur ex. Dolor accusamus obcaecati quidem ab laboriosam fugiat, alias harum natus saepe provident quod aperiam facere inventore veniam asperiores iste eaque voluptatem incidunt nostrum neque, ex, non aliquid! Facere deserunt fuga ut a provident delectus voluptatibus enim dignissimos ipsum, neque voluptas repudiandae, sapiente nihil.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 14.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "14.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam ullam ut ratione quod enim nam temporibus nihil corrupti eligendi repellendus quis architecto dolor laborum totam saepe explicabo pariatur blanditiis, ipsa autem! Consequatur nam, placeat veniam quis! Iusto nesciunt delectus porro, accusamus. Nobis aspernatur consequuntur provident sint corrupti cumque sit blanditiis deleniti autem doloremque reiciendis unde repellat, tenetur sapiente ad voluptate quidem adipisci, distinctio incidunt nam! Omnis dolor, molestias voluptatibus beatae sunt id libero laborum, corrupti molestiae excepturi fugiat, distinctio dolore repellendus. Necessitatibus reprehenderit sapiente, tempora at laborum labore. Nisi mollitia ipsam deleniti quis quidem ad delectus numquam obcaecati voluptates in.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 14.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            },
            {
                "_id": 3,
                "title": "Operaciones con strings (strcpy, strlen, strcat y strcmp)",
                "content": "Librería string.h. Copiar strings, calcular la longitud de un string, concatenar strings y comparar strings.",
                "explanation": '''
                               Los arreglos tienen algunas restricciones, por ejemplo, no es posible copiar un arreglo en otro con el operador de asignación `=`, ni comparar si dos vectores son iguales con el operador `==` 
                               ### ERROR
                               ```c
                               char string1[10] = "cadena 1";
                               char string2[10];
                               string2 = string1;
                               ```
                               ### ERROR
                               ```c
                               if(string1 == string2)...
                               ```
                               Afortunadamente, en C tenemos la librería `string.h` que nos proporciona funciones para conseguir lo que necesitamos:
                               
                               - strcpy → `strcpy(string2, string1);` 
                                 - **Copia** el contenido de la variable *string1* en la variable *string2*
                                   
                                   ```c
                                   char string1[10] = "prueba",
                                       string2[10];
                                   strcpy(string2,string1);
                                   // string2 = "prueba"
                                   ```
                               - strlen → `strlen(string);` 
                                 - Calcula y devuelve la **longitud** (`int`) de la variable *string*
                                   
                                   ```c
                                   char cadena[10] = "prueba";
                                       int longitud = strlen(cadena);
                                   // longitud = 6
                                   ```
                               - strcat → `strcat(string1, string2);` 
                                 - **Añade** el contenido de la variable *string2* al final del contenido en la variable *string1*
                                   
                                   ```c
                                   char cadena1[20] = "¡Hola ",
                                       cadena2[10] = "mundo!";
                                       strcat(cadena1, cadena2);
                                       // cadena1 = "¡Hola mundo!"
                                   ```
                               - strcmp → `strcmp(string1, string2);` 
                                 - **Compara** las cadenas de caracteres *string1* y *string2*, devuelve un valor menor que, igual que o mayor que 0 si string1 es menor que, igual que o mayor que string2
                                   
                                   ```c
                                   if (strcmp(cadena1,cadena2) == 0)
                                       // cadena1 es igual que cadena2 ??
                                   
                                       if (strcmp(cadena1,cadena2) < 0)
                                       // cadena1 es menor que cadena2 ??
                                   
                                       if (strcmp(cadena1,cadena2) > 0)
                                       // cadena1 es mayor que cadena2 ??
                                   ```
                               ''',
                "example": {
                    "statement": "15 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Molestias voluptatibus tempora neque nam iusto, velit, fugiat reprehenderit, at vero officiis adipisci ab nemo officia dignissimos rem asperiores, id cum. Numquam magnam commodi itaque debitis doloremque. Velit quae explicabo eum vel ipsa odit esse praesentium quas earum sapiente et eos culpa inventore laboriosam nobis consequatur perspiciatis, illum minima mollitia dolorem! Quod non, earum quam. Consequatur magnam placeat alias vero. Rem eos commodi temporibus, at quis nemo suscipit. Perspiciatis dignissimos quas ratione.",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 15; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "15.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam velit aliquid quis adipisci, ipsum veritatis doloribus eligendi repellat ex officiis assumenda suscipit beatae minima in sit non exercitationem qui dolorem consequatur nostrum! Maxime deleniti aspernatur, sapiente ratione velit doloremque praesentium illo officiis nostrum, reprehenderit itaque. Eos ratione maxime labore rerum! Non sed ipsum, unde beatae quibusdam? Sunt, delectus nesciunt ipsam tempore fugiat veritatis doloribus quam placeat obcaecati, nam, ratione assumenda nisi error recusandae! Quo, libero soluta consequuntur rem, modi accusamus praesentium voluptatum culpa, alias accusantium obcaecati quam. Optio impedit asperiores quod, nisi, blanditiis cumque veniam, reprehenderit at voluptatibus accusantium excepturi!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 15.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "15.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsum quibusdam in maxime? Pariatur maxime porro ea, soluta, sunt nostrum dolorem qui perspiciatis maiores incidunt repellendus cupiditate commodi iusto voluptatibus voluptate, atque harum sint! Dolorum porro nostrum excepturi delectus voluptas aspernatur quasi, fugit maxime amet nulla similique pariatur? Perspiciatis quaerat dolores commodi nisi dolorum repellendus, corporis vitae, delectus ullam, nemo recusandae, iusto ut cupiditate. Ipsam nobis, optio suscipit doloremque, eveniet incidunt iusto porro placeat beatae error inventore cupiditate quos maiores blanditiis cum similique quo at? Quasi nihil suscipit earum distinctio, beatae fuga ad provident recusandae consequuntur vitae quia ut, ipsam fugit.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 15.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "15.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores blanditiis sequi eveniet non iure, vero, sunt minus explicabo fugiat distinctio cumque iusto itaque laborum ullam expedita doloremque nesciunt repudiandae impedit enim repellat facere a. Eum, distinctio temporibus voluptas expedita, repudiandae aliquam cum quos odit qui voluptatem dicta cupiditate rerum quisquam culpa amet iste accusamus ad veritatis nihil explicabo et laboriosam aperiam neque. Ipsum quidem officia, quod pariatur! Quam, minima officiis dicta sapiente. Placeat officiis quos voluptatem, maiores deserunt in voluptas sed exercitationem ratione beatae tenetur ducimus, laudantium enim aperiam eveniet aspernatur corporis aut doloribus? Quia libero corporis vel alias, assumenda.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 15.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            }
        ]
    },
    {
        "_id": 6,
        "title" : "Unidad VI. Estructuras y Punteros",
        "lessons": [
            {
                "_id": 1,
                "title": "Estructuras",
                "content": "Definición y uso de las estructuras en lenguaje C. Creación e inicialización de una variable usando una estructura. Acceso a los miembros de una estructura.",
                "explanation": '''
                               Las estructuras son la elección adecuada cuando necesitamos guardar una serie de datos relacionados entre sí de alguna manera, por ejemplo, supongamos que deseamos llevar el registro de un producto dentro de un almacén, este producto posee un código (número entero), nombre (cadena de caracteres), un precio (número decimal) y una cantidad (número entero).  
                               ```c
                               typedef struct
                               {
                                   int codigo;
                                   char nombre[31];
                                   float precio;
                                   int cantidad;
                               }producto;
                               ```
                               Usamos `typedef` para crear un nuevo tipo de dato llamado *producto*, el cual tiene *4 miembros* (codigo, nombre, precio y cantidad), los miembros de una estructura pueden ser de tipos de datos diferentes (`int`, `float`, `char`, etc). 
                               La instrucción para crear una nueva variable de tipo producto es:
                               ```c
                               producto prod;
                               ```
                               Podemos **inicializar** una variable del tipo creado en la misma instrucción de declaración, la única restricción es que los valores deben aparecer en el mismo orden que han sido declarados o especificar cada miembro con el operador `.` (punto) seguido del nombre:
                               ```c
                               producto prod = {123, "la la", 23.23f, 2}; 
                               ```
                               ```c  
                               producto prod = { .nombre="la la", .codigo=123, .cantidad=2, .precio=23.23f};
                               ```
                               ### Imagen
                               Para **acceder** a cada miembro usamos el operador `.` (punto), por ejemplo, si queremos imprimir todos los valores de un producto:
                               ```c  
                               printf("Codigo: %d\n",prod.codigo);
                               printf("Nombre: %s\n",prod.nombre);
                               printf("Precio: %.2f\n",prod.precio);
                               printf("Precio: %d\n",prod.cantidad);
                               ```
                               Podemos aplicar todas las operaciones que conocemos hasta ahora a los diferentes miembros de una estructura dependiendo del tipo de dato del miembro, por ejemplo, podemos decrementar la cantidad del producto o leer un valor y guardarlo en el miembro llamado precio:
                               ```c  
                               prod.cantidad--;
                               scanf("%f",&prod.precio);
                               ```
                               Al ser un nuevo tipo de elemento podemos pasarlo como parámetro en una función: 
                               ```c  
                               void imprimir_producto(producto p)
                               {
                                   printf("Codigo: %d\n",p.codigo);
                                   printf("Nombre: %s\n",p.nombre);
                                   printf("Precio: %.2f\n",p.precio);
                                   printf("Precio: %d\n",p.cantidad);
                               }
                               ```
                               O retornarlo en una función: 
                               ```c  
                               producto generar_producto()
                               {
                                   producto p = { .nombre="la la", 
                                                  .codigo=123, 
                                                  .cantidad=2, 
                                                  .precio=23.23f };
                                   return p;
                               }
                               ```
                               ''',
                "example": {
                    "statement": "16 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Maxime, natus harum repellendus quidem eius cum quas dolor, et, nesciunt voluptatum ratione suscipit. Alias fugiat ab, eum voluptate distinctio, aliquid itaque. Sit modi provident dolore tempore quisquam sed aperiam dignissimos iure debitis, praesentium necessitatibus veritatis consectetur eos, beatae quos? Ducimus rerum maxime, ipsum minus! Architecto reiciendis eveniet consectetur velit vitae sed reprehenderit culpa delectus nobis, quas obcaecati qui sint? Porro quas rem iure modi mollitia explicabo deserunt, praesentium tempora architecto eius!",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 16; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "16.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quidem explicabo, officia, voluptatibus provident tempora expedita beatae consequuntur ipsam! Libero voluptas quibusdam amet id, veniam asperiores. Fugiat libero corporis consequatur facere officiis recusandae aut atque distinctio consectetur? Id asperiores, illo veniam dignissimos? Ea expedita adipisci, est perferendis, iusto ullam facere eos quasi consequatur minima. Dolor iusto fuga, nostrum animi, eius voluptates voluptas, ad molestiae totam veniam quam temporibus nesciunt voluptatibus magnam ducimus praesentium aperiam? Iure consectetur, nihil dolores. Ipsum nemo fugiat quo vitae quia veniam nostrum, nobis voluptatem incidunt. Quod, quibusdam, cum. Dolores nisi ut facilis nihil neque vero rerum doloribus.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 16.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "16.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quisquam et quo rerum ut debitis sapiente dolorum voluptatem ab placeat, doloremque laboriosam asperiores aperiam velit culpa vitae excepturi nostrum reprehenderit! Ducimus sapiente, fugit suscipit! Corrupti quaerat nesciunt tempore id quo hic aspernatur ratione, autem nobis! Reiciendis amet, numquam eius, nemo ad culpa quod incidunt fugiat dignissimos ratione iure, tenetur sapiente vitae ullam tempore maxime. Hic sint pariatur nemo vero, commodi nulla ea ipsam. Suscipit incidunt deleniti quo qui hic dolore rem asperiores assumenda dolores natus inventore est, aut, nihil odio ea, porro sint sapiente quasi expedita ratione facilis? Amet, expedita, delectus.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 16.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "16.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Facere accusamus et cumque reiciendis. Cupiditate laudantium neque dicta corrupti facilis tenetur at possimus odit explicabo omnis. Officiis veritatis qui voluptate molestiae incidunt obcaecati ducimus odio commodi fuga rerum alias vel voluptatum eaque, dolore praesentium quis! Ipsam dignissimos corporis eius doloremque laboriosam officiis modi aliquam reiciendis eos architecto totam sequi magnam, soluta porro dolorem delectus quis odio ea et incidunt cupiditate aliquid distinctio. Iusto quo temporibus eos nemo sunt modi quisquam quod sapiente fugiat sit, aliquid labore consectetur, saepe fuga recusandae voluptate magni. Quisquam veritatis distinctio, nobis molestias, assumenda eligendi iste provident.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 16.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            },
            {
                "_id": 2,
                "title": "Vectores de estructuras, estructura dentro de estructura (Carga y recorrido)",
                "content": "Combinación de vectores y estructuras. Manejo de estructuras con vectores. Manejo de vectores de estructuras.",
                "explanation": '''
                               Estructura y arreglos pueden ser combinados sin ninguna restricción, lo que implica que los arreglos pueden tener estructuras como elementos y las estructuras pueden tener arreglos y otras estructuras como miembros.
                               
                               Tener una estructura dentro de otra es útil en casos como: Se desea llevar el registro de estudiantes inscritos en la materia XXXXX, para esto se requiere guardar el nombre completo del estudiante, la cédula de identidad y las notas de los 3 parciales:  
                               ```c
                               typedef struct
                               {
                                   char primer_nombre[31];
                                   char primer_apellido[31];
                               }nombre_completo;
                               ```
                               ```c
                               typedef struct
                               {
                                   nombre_completo nombre;
                                   int cedula;
                                   float notas_parciales[3];
                               }estudiante;
                               ```
                               Vemos que primero hemos creado la estructura `nombre\_completo`, compuesta por *primer\_nombre* y *primer\_apellido* (strings). Luego creamos la estructura `estudiante`, la cual contiene un nombre (de tipo `nombre\_completo`), la cédula y un vector de 3 elementos para guardar las notas de cada parcial. 
                               
                               Para crear y utilizar una variable de tipo estudiante:
                               ```c
                               estudiante est1;
                               
                               printf("Ingrese el nombre del estudiante\n");
                               scanf("%s",est1.nombre.primer_nombre);
                               
                               printf("Ingrese el apellido del estudiante\n");
                               scanf("%s",est1.nombre.primer_apellido);
                               
                               printf("Ingrese la cedula del estudiante\n");
                               scanf("%d",&est1.cedula);
                               
                               printf("Ingrese las notas parciales:\n");
                               
                               for (int i = 0; i < 3; ++i)
                               {
                                   printf("Parcial %d: \n",i+1);
                                   scanf("%f",&est1.notas_parciales[i]);
                               }
                               ```
                               Al crear una estructura estamos declarando un nuevo tipo de dato, con el cual es posible crear arreglos como ya hemos estudiado. Si tenemos que llevar el registro de 20 estudiantes (en lugar de 1):
                               ```c
                               int cantidad_estudiantes = 20;
                               estudiante estudiantes[cantidad_estudiantes];
                               ```
                               De esta manera la variable estudiantes contendrá la información de 20 estudiantes.
                               
                               Para acceder a cada estudiante y su información, usamos la combinación de dos notaciones ya conocidas: `[indice]` para acceder a un elemento (estudiante) y `.` (punto) para acceder a sus miembros (*nombre*, *cedula* y *notas_parciales*):
                               ```c
                               int i;
                               // Ciclo para guardar información de cada estudiante
                               for (i = 0; i < cantidad_estudiantes; ++i)
                               {
                                   printf("Ingrese el nombre del estudiante\n");
                                   scanf("%s",estudiantes[i].nombre.primer_nombre);
                               
                                   printf("Ingrese el apellido del estudiante\n");
                                   scanf("%s",estudiantes[i].nombre.primer_apellido);
                               
                                   printf("Ingrese la cedula del estudiante\n");
                                   scanf("%d",&estudiantes[i].nombre.cedula);
                               
                                   printf("Ingrese las notas parciales:\n");
                                   
                                   /*Ciclo para guardar la nota de cada parcial 
                                       de un estudiante */
                                   for (int j = 0; j < 3; ++j)
                                   {
                                       printf("Parcial %d: \n",j+1);
                                       scanf("%f",&estudiantes[i].nombre.notas_parciales[j]);
                                   }
                               }
                               ```
                               ''',
                "example": {
                    "statement": "17 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Earum, iusto placeat obcaecati praesentium quod aliquam facilis minima necessitatibus similique, nulla molestiae quis voluptatum repellendus mollitia laboriosam ea! Reprehenderit tenetur eius vel perferendis sit omnis error nobis autem. Doloribus facere, unde, omnis eius libero cumque. Nihil officiis optio repellendus eius maxime quae nostrum placeat iure at. Commodi, magni temporibus non, repellendus eligendi numquam necessitatibus nulla repudiandae. Voluptas suscipit dicta tempora, saepe illo magnam, modi dolorum cumque explicabo nihil dignissimos doloribus. Libero.",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 17; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "17.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vitae error exercitationem, voluptates itaque quo, odio alias recusandae sit nulla, quaerat quos corporis? Impedit, eaque, tempore. Dicta quia ea laboriosam blanditiis nemo totam nam, quibusdam, excepturi ratione nesciunt placeat quas rem illum earum architecto. Recusandae, itaque, provident? Quod provident tenetur et, possimus asperiores quaerat deserunt quibusdam, dolorem libero commodi perspiciatis facere beatae sequi eligendi vitae, odit debitis repellat quasi itaque accusantium accusamus dolorum animi inventore excepturi quia! Ipsam odio recusandae id placeat aliquam ipsum sapiente repellendus veniam, magnam molestias maxime voluptates, laboriosam vero similique iure magni reprehenderit, voluptas dignissimos ipsa laborum!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 17.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "17.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde possimus provident hic dicta corporis reiciendis voluptatibus porro esse ea deleniti pariatur repudiandae laboriosam dignissimos similique, quaerat alias earum tempora vel, distinctio recusandae laudantium perferendis voluptate in eligendi repellendus. Est, asperiores autem ut dolorum sed tenetur, cupiditate quidem, inventore reiciendis rem veniam dolore unde, quos. Non, dolor minima magni distinctio similique maiores voluptates consequatur corporis perferendis corrupti iusto expedita autem reprehenderit deserunt ratione quidem quo, optio impedit asperiores voluptatem inventore alias dolores. Totam eveniet aperiam tempora et saepe cupiditate, porro quisquam soluta dignissimos, animi ex quidem quam ea, molestiae. Placeat, officiis!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 17.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "17.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. At earum, aliquam quas. Iure quis magnam consectetur nihil est accusantium, fugiat id exercitationem consequatur unde alias qui deserunt dolorum ab temporibus hic quod dolore voluptatum officia! Doloremque, dolores sapiente delectus rerum eligendi temporibus! Quibusdam culpa ex corporis officia impedit quasi nihil odit accusamus minus autem, saepe fugiat vero voluptatibus facilis, repellat itaque adipisci dolorum. Tempore ipsa eum aspernatur nam magni. Dolorem in officiis illum laborum. Voluptatem impedit ipsa fuga accusamus, voluptate deserunt. Fugit consequuntur nemo, eos quod consequatur fugiat odio unde minus sequi. Cum adipisci, perferendis dolores officia officiis quam laudantium.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 17.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            },
            {
                "_id": 3,
                "title": "Punteros",
                "content": "18 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Itaque ullam dicta, dolorem atque, aut earum minima quas!",
                "explanation": ''' 
                               # Falto yo :'( 
                               ''',
                "example": {
                    "statement": "18 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Rerum quisquam molestias, cumque illo nisi, natus quidem libero earum optio reiciendis magni a, placeat possimus atque accusamus maiores consectetur voluptas ipsa adipisci veniam. Magnam autem quasi dolorum fugiat officiis provident quibusdam atque eaque dolores! Nesciunt delectus sunt, totam, quidem vel perferendis eligendi reprehenderit quam? Adipisci accusamus beatae libero nesciunt voluptas, perspiciatis magnam eos! Architecto cupiditate laudantium laboriosam optio minima error, recusandae officia necessitatibus inventore accusantium qui in nisi blanditiis soluta voluptates!",
                    "code": '''
                            #include <stdio.h> 
                            int main(){ 
                                return 18; 
                            }
                            ''',
                    "solutionSteps": [
                        "Primer paso",
                        "Segundo paso",
                        "Tercer paso"
                    ]
                },
                "exercises": [
                    {
                        "statement": "18.1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Hic id quae, debitis accusamus officia aspernatur sed fugit modi quia accusantium illo, dolore labore ducimus soluta temporibus perferendis expedita pariatur reprehenderit ut incidunt quidem. Dolorem, architecto, quod. Totam nobis aliquam veritatis dolores cumque dolorem tempora earum nisi deserunt eveniet vero impedit veniam pariatur rerum, ad, sit, distinctio corrupti velit dicta. Dolorem similique vel hic est harum dignissimos, ullam quia vitae laboriosam sapiente sed, quod reiciendis! Quasi earum non quisquam optio repellat voluptatum aliquid, nostrum, temporibus quis labore aspernatur provident ullam accusamus, distinctio. Blanditiis nesciunt ipsa numquam, deserunt, odio nemo asperiores error!",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 18.1 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "18.2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Labore laborum molestias, amet cumque facere optio dolores obcaecati provident adipisci corrupti quis fuga dolorum ad nobis. Ratione ex provident, adipisci totam maiores, culpa tenetur blanditiis, inventore nam ea sapiente quae optio nisi. Ea quia dicta quos voluptatum incidunt consequatur vero, libero quidem omnis eligendi, ullam minima, aliquid quis dolor minus eius. Possimus atque aut voluptates, non laboriosam ut reprehenderit sint dolorum debitis facilis fugiat impedit, unde libero quae praesentium esse obcaecati! Iste unde distinctio voluptatum tenetur facere consequuntur. Perspiciatis vel laudantium inventore architecto, fugiat doloribus velit laborum expedita nihil sequi. Earum?",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 18.2 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    },
                    {
                        "statement": "18.3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Error, velit voluptatem libero qui soluta nulla tenetur quas provident officiis, quibusdam impedit, quidem unde obcaecati quo. Tempore itaque, modi dolor expedita quis. Praesentium est sequi harum nemo commodi nulla ad molestiae, deserunt sunt accusamus vel quo enim minus accusantium atque adipisci similique optio nisi ducimus mollitia, voluptatem maiores fuga odio ut! Accusantium rem neque eaque, incidunt! Officia, minus numquam architecto inventore adipisci, maiores nihil quos consequatur quod quibusdam nam veniam nobis! Esse nam quo nihil ullam, quae ea corrupti modi velit delectus aliquam tempora amet consequuntur, quam, quia corporis repellat. Quos.",
                        "code": '''
                                #include <stdio.h> 
                                int main(){ 
                                    return 18.3 ; 
                                }
                                ''',
                        "expectedOutput": ''' 
                                           > !Hola Mundo!
                                           '''
                    }
                ]
            }
        ]
    }
]